#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "üîç Checking for source files without tests..."

# Get list of changed files
CHANGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

# Initialize variables
UNCOVERED_SOURCE_FILES=""
HAS_UNCOVERED_FILES=false

# Check each changed file
for file in $CHANGED_FILES; do
  # Skip if it's not a source file
  if [[ ! "$file" =~ \.(ts|tsx|js|jsx)$ ]] || [[ "$file" =~ \.(test|spec)\.(ts|tsx|js|jsx)$ ]]; then
    continue
  fi
  
  # Skip if it's in node_modules, dist, build, or .next
  if [[ "$file" =~ node_modules/ ]] || [[ "$file" =~ dist/ ]] || [[ "$file" =~ build/ ]] || [[ "$file" =~ \.next/ ]]; then
    continue
  fi
  
  # Get the directory of the source file
  DIR=$(dirname "$file")
  FILENAME=$(basename "$file")
  NAME_WITHOUT_EXT="${FILENAME%.*}"
  
  # Look for corresponding test files
  TEST_FILES_FOUND=false
  
  # Check for test files in the same directory
  if [ -f "$DIR/${NAME_WITHOUT_EXT}.test.${FILENAME##*.}" ] || \
     [ -f "$DIR/${NAME_WITHOUT_EXT}.spec.${FILENAME##*.}" ] || \
     [ -f "$DIR/__tests__/${NAME_WITHOUT_EXT}.test.${FILENAME##*.}" ] || \
     [ -f "$DIR/__tests__/${NAME_WITHOUT_EXT}.spec.${FILENAME##*.}" ]; then
    TEST_FILES_FOUND=true
  fi
  
  # Check for test files in parent __tests__ directory
  PARENT_DIR=$(dirname "$DIR")
  if [ -f "$PARENT_DIR/__tests__/${NAME_WITHOUT_EXT}.test.${FILENAME##*.}" ] || \
     [ -f "$PARENT_DIR/__tests__/${NAME_WITHOUT_EXT}.spec.${FILENAME##*.}" ]; then
    TEST_FILES_FOUND=true
  fi
  
  # If no test files found, add to uncovered list
  if [ "$TEST_FILES_FOUND" = false ]; then
    UNCOVERED_SOURCE_FILES="$UNCOVERED_SOURCE_FILES\n  - $file"
    HAS_UNCOVERED_FILES=true
  fi
done

# Report results
if [ "$HAS_UNCOVERED_FILES" = true ]; then
  echo "‚ùå Found source files without corresponding tests:"
  echo -e "$UNCOVERED_SOURCE_FILES"
  echo ""
  echo "üí° Please add tests for these files before pushing:"
  echo "   - Create .test.ts/.test.tsx or .spec.ts/.spec.tsx files"
  echo "   - Place them in the same directory or in a __tests__ subdirectory"
  echo ""
  echo "üìù Example test file structure:"
  echo "   src/features/dashboard/Dashboard.tsx"
  echo "   src/features/dashboard/Dashboard.test.tsx"
  echo "   OR"
  echo "   src/features/dashboard/__tests__/Dashboard.test.tsx"
  exit 1
fi

echo "‚úÖ All changed source files have corresponding tests!"

echo "üìä Running coverage checks on changed files..."
pnpm test:coverage -- --changed

if [ $? -ne 0 ]; then
  echo "‚ùå Coverage checks failed"
  echo "üí° Make sure changed files have at least 80% test coverage"
  exit 1
fi

echo "üß™ Running e2e tests..."
pnpm test:e2e

echo "‚úÖ Pre-push checks passed!"