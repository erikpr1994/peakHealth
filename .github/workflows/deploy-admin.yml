name: Deploy Admin App

on:
  push:
    branches: [main]
    paths:
      - 'apps/admin/**'
      - 'packages/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'turbo.json'
      - '.github/workflows/deploy-admin.yml'
  # Allow manual triggering
  workflow_dispatch:

# Cancel in-progress runs on new pushes
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PNPM_VERSION: 10.14.0
  NODE_VERSION: 24.x
  APP_NAME: admin

jobs:
  check-changes:
    name: Check for relevant changes
    runs-on: ubuntu-latest
    outputs:
      should_deploy: ${{ steps.filter.outputs.admin }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for changes in admin app or dependencies
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            admin:
              - 'apps/admin/**'
              - 'packages/**'
              - 'package.json'
              - 'pnpm-lock.yaml'
              - 'turbo.json'
              - '.github/workflows/deploy-admin.yml'

  build:
    name: Build
    needs: check-changes
    if: ${{ needs.check-changes.outputs.should_deploy == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup Turborepo cache
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build admin app
        run: pnpm turbo run build --filter=@peakhealth/admin...

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: admin-build
          path: apps/admin/.next
          retention-days: 1

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: admin-build
          path: apps/admin/.next

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Deploy to Vercel
      - name: Deploy to Vercel
        id: deploy
        uses: vercel/action@v3
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_ADMIN }}
          working-directory: ./apps/admin
          vercel-args: '--prod'

  create-sentry-release:
    name: Create Sentry Release
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT_ADMIN }}
        with:
          environment: production
          version: ${{ github.sha }}
