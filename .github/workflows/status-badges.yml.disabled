name: Update Status Badges

on:
  workflow_run:
    workflows: ['CI', 'Security Scanning', 'Performance Analysis']
    types:
      - completed
  # Allow manual triggering
  workflow_dispatch: {}

jobs:
  update-badges:
    name: Update Status Badges
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion != 'skipped'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get workflow status
        id: workflow-status
        run: |
          WORKFLOW_NAME="${{ github.event.workflow_run.name }}"
          WORKFLOW_CONCLUSION="${{ github.event.workflow_run.conclusion }}"

          # Map workflow names to badge names
          case "$WORKFLOW_NAME" in
            "CI")
              BADGE_NAME="ci"
              ;;
            "Security Scanning")
              BADGE_NAME="security"
              ;;
            "Performance Analysis")
              BADGE_NAME="performance"
              ;;
            *)
              BADGE_NAME=$(echo "$WORKFLOW_NAME" | tr '[:upper:]' '[:lower:]' | tr ' ' '-')
              ;;
          esac

          # Map conclusion to status
          case "$WORKFLOW_CONCLUSION" in
            "success")
              STATUS="passing"
              COLOR="green"
              ;;
            "failure")
              STATUS="failing"
              COLOR="red"
              ;;
            "cancelled")
              STATUS="cancelled"
              COLOR="yellow"
              ;;
            *)
              STATUS="unknown"
              COLOR="lightgrey"
              ;;
          esac

          echo "badge_name=$BADGE_NAME" >> $GITHUB_OUTPUT
          echo "status=$STATUS" >> $GITHUB_OUTPUT
          echo "color=$COLOR" >> $GITHUB_OUTPUT
          echo "workflow_name=$WORKFLOW_NAME" >> $GITHUB_OUTPUT

      - name: Generate badge URL
        id: badge-url
        run: |
          BADGE_NAME="${{ steps.workflow-status.outputs.badge_name }}"
          STATUS="${{ steps.workflow-status.outputs.status }}"
          COLOR="${{ steps.workflow-status.outputs.color }}"

          BADGE_URL="https://img.shields.io/badge/$BADGE_NAME-$STATUS-$COLOR"
          echo "badge_url=$BADGE_URL" >> $GITHUB_OUTPUT

      - name: Update README with badges
        run: |
          # Read current README
          if [ -f "README.md" ]; then
            README_CONTENT=$(cat README.md)
          else
            README_CONTENT="# PeakHealth\n\n"
          fi

          # Check if badges section exists
          if echo "$README_CONTENT" | grep -q "## Status"; then
            # Update existing badges section
            BADGE_NAME="${{ steps.workflow-status.outputs.badge_name }}"
            BADGE_URL="${{ steps.badge-url.outputs.badge_url }}"
            
            # Create new badge line
            NEW_BADGE="![$BADGE_NAME]($BADGE_URL)"
            
            # Update or add the specific badge
            if echo "$README_CONTENT" | grep -q "!\[$BADGE_NAME\]"; then
              # Replace existing badge
              README_CONTENT=$(echo "$README_CONTENT" | sed "s|!\[$BADGE_NAME\](.*)|$NEW_BADGE|")
            else
              # Add new badge to status section
              README_CONTENT=$(echo "$README_CONTENT" | sed "s|## Status|## Status\n\n$NEW_BADGE|")
            fi
          else
            # Create new status section
            BADGE_NAME="${{ steps.workflow-status.outputs.badge_name }}"
            BADGE_URL="${{ steps.badge-url.outputs.badge_url }}"
            NEW_BADGE="![$BADGE_NAME]($BADGE_URL)"
            
            README_CONTENT="$README_CONTENT\n\n## Status\n\n$NEW_BADGE"
          fi

          # Write updated README
          echo "$README_CONTENT" > README.md

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git diff --quiet && git diff --staged --quiet || git commit -m "Update status badge for ${{ steps.workflow-status.outputs.workflow_name }} workflow"
          git push

  generate-all-badges:
    name: Generate All Status Badges
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate comprehensive status section
        run: |
          # Create status badges for all workflows
          cat > status-badges.md << 'EOF'
          ## Status

          ![CI](https://img.shields.io/badge/ci-passing-green)
          ![Security](https://img.shields.io/badge/security-passing-green)
          ![Performance](https://img.shields.io/badge/performance-passing-green)
          ![Deployment](https://img.shields.io/badge/deployment-passing-green)
          ![E2E Tests](https://img.shields.io/badge/e2e%20tests-passing-green)

          ---

          **Workflow Status:**
          - **CI:** Runs lint, type-check, build, and unit tests
          - **Security:** Scans for vulnerabilities and security issues
          - **Performance:** Analyzes bundle size and performance metrics
          - **Deployment:** Deploys to Vercel with health checks
          - **E2E Tests:** Runs end-to-end tests in parallel

          [View all workflows â†’](https://github.com/${{ github.repository }}/actions)
          EOF

          # Read current README
          if [ -f "README.md" ]; then
            README_CONTENT=$(cat README.md)
          else
            README_CONTENT="# PeakHealth\n\n"
          fi

          # Replace or add status section
          if echo "$README_CONTENT" | grep -q "## Status"; then
            # Replace existing status section
            STATUS_BADGES=$(cat status-badges.md)
            README_CONTENT=$(echo "$README_CONTENT" | sed '/## Status/,/^## /{ /^## /!d; }' | sed 's|## Status|'"$STATUS_BADGES"'|')
          else
            # Add status section at the top
            STATUS_BADGES=$(cat status-badges.md)
            README_CONTENT="$README_CONTENT\n\n$STATUS_BADGES"
          fi

          # Write updated README
          echo "$README_CONTENT" > README.md

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git diff --quiet && git diff --staged --quiet || git commit -m "Add comprehensive status badges"
          git push
