/* eslint-disable */
// @ts-nocheck
// This file is generated, do not edit! Run "npx hypertune generate" to regenerate.
// Generated by hypertune-javascript-client v2.7.2

import {
  DeepPartial,
  DehydratedState,
  FlagFallbacks,
  FlagPaths,
  FlagValues,
} from 'hypertune';
import * as hypertuneTypes from './hypertune';
import getHypertune from '../src/lib/hypertune/getHypertune';

export async function getVercelOverride(): Promise<DeepPartial<hypertuneTypes.Source> | null> {
  try {
    const vercelToolbarCookie = process.env.NEXT_COOKIE_NEXT_TOOLBAR;
    if (!vercelToolbarCookie) {
      return null;
    }

    const vercelToolbarData = JSON.parse(
      decodeURIComponent(vercelToolbarCookie)
    );
    const hypertuneOverride = vercelToolbarData?.['hypertune-override'];
    if (!hypertuneOverride) {
      return null;
    }

    return hypertuneOverride;
  } catch (e) {
    console.error('Error parsing Vercel toolbar cookie', e);
    return null;
  }
}

export async function getFlagValues<
  T extends FlagPaths,
  F extends FlagFallbacks<T>
>(
  flagPaths: T[],
  flagFallbacks: F,
  params?: Parameters<typeof getHypertune>[0]
): Promise<FlagValues<T, F>> {
  const hypertune = await getHypertune(params);
  return hypertune.getFlagValues({
    flagPaths,
    flagFallbacks,
  });
}

/**
 * [Open in Hypertune UI]({@link https://app.hypertune.com/projects/6203/main/draft/logic?selected_field_path=root%3Eroadmap})
 */
export async function roadmapFlag(
  params?: Parameters<typeof getHypertune>[0]
): Promise<boolean> {
  const hypertune = await getHypertune(params);
  return hypertune.roadmap({ fallback: false });
}

