{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/lib/supabase/server.ts"],"sourcesContent":["import { createServerClient } from '@supabase/ssr';\nimport { cookies } from 'next/headers';\n\nexport async function createClient() {\n  const cookieStore = await cookies();\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll();\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) =>\n              cookieStore.set(name, value, options)\n            );\n          } catch {\n            // The `setAll` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n      },\n    }\n  );\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,yUAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,wRAAA,CAAA,qBAAkB,AAAD,6PAGtB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,0DAA0D;gBAC1D,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/app/api/auth/user/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\nimport { createClient } from '@/lib/supabase/server';\n\nexport async function GET() {\n  try {\n    const supabase = await createClient();\n\n    const {\n      data: { user },\n      error,\n    } = await supabase.auth.getUser();\n\n    if (error) {\n      // Don't log expected auth session missing errors\n      if (error.message.includes('Auth session missing')) {\n        return NextResponse.json(\n          { error: 'Not authenticated' },\n          { status: 401 }\n        );\n      }\n      console.error('Supabase auth error:', error);\n      return NextResponse.json({ error: error.message }, { status: 401 });\n    }\n\n    if (!user) {\n      return NextResponse.json({ error: 'Not authenticated' }, { status: 401 });\n    }\n\n    // Extract user roles and groups from Supabase's built-in user_metadata\n    // Default to basic user if no roles/groups are set\n    let userRoles = ['basic'];\n    let userGroups = ['free'];\n\n    if (user.user_metadata) {\n      userRoles = user.user_metadata.roles || userRoles;\n      userGroups = user.user_metadata.groups || userGroups;\n    }\n\n    return NextResponse.json({\n      user: {\n        ...user,\n        userRoles,\n        userGroups,\n      },\n    });\n  } catch (error) {\n    console.error('Error fetching user:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function PUT(request: NextRequest) {\n  try {\n    const supabase = await createClient();\n\n    const {\n      data: { user },\n      error: authError,\n    } = await supabase.auth.getUser();\n\n    if (authError || !user) {\n      return NextResponse.json({ error: 'Not authenticated' }, { status: 401 });\n    }\n\n    const { user_metadata } = await request.json();\n\n    if (!user_metadata || typeof user_metadata !== 'object') {\n      return NextResponse.json(\n        { error: 'Invalid user_metadata provided' },\n        { status: 400 }\n      );\n    }\n\n    // Update user metadata using Supabase's updateUser method\n    const { data, error } = await supabase.auth.updateUser({\n      data: user_metadata,\n    });\n\n    if (error) {\n      console.error('Error updating user metadata:', error);\n      return NextResponse.json({ error: error.message }, { status: 500 });\n    }\n\n    return NextResponse.json({\n      success: true,\n      user: data.user,\n      message: 'User metadata updated successfully',\n    });\n  } catch (error) {\n    console.error('Error updating user metadata:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,kIAAA,CAAA,eAAY,AAAD;QAElC,MAAM,EACJ,MAAM,EAAE,IAAI,EAAE,EACd,KAAK,EACN,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;QAE/B,IAAI,OAAO;YACT,iDAAiD;YACjD,IAAI,MAAM,OAAO,CAAC,QAAQ,CAAC,yBAAyB;gBAClD,OAAO,wUAAA,CAAA,eAAY,CAAC,IAAI,CACtB;oBAAE,OAAO;gBAAoB,GAC7B;oBAAE,QAAQ;gBAAI;YAElB;YACA,QAAQ,KAAK,CAAC,wBAAwB;YACtC,OAAO,wUAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,MAAM,OAAO;YAAC,GAAG;gBAAE,QAAQ;YAAI;QACnE;QAEA,IAAI,CAAC,MAAM;YACT,OAAO,wUAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAoB,GAAG;gBAAE,QAAQ;YAAI;QACzE;QAEA,uEAAuE;QACvE,mDAAmD;QACnD,IAAI,YAAY;YAAC;SAAQ;QACzB,IAAI,aAAa;YAAC;SAAO;QAEzB,IAAI,KAAK,aAAa,EAAE;YACtB,YAAY,KAAK,aAAa,CAAC,KAAK,IAAI;YACxC,aAAa,KAAK,aAAa,CAAC,MAAM,IAAI;QAC5C;QAEA,OAAO,wUAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,MAAM;gBACJ,GAAG,IAAI;gBACP;gBACA;YACF;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,wUAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,kIAAA,CAAA,eAAY,AAAD;QAElC,MAAM,EACJ,MAAM,EAAE,IAAI,EAAE,EACd,OAAO,SAAS,EACjB,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;QAE/B,IAAI,aAAa,CAAC,MAAM;YACtB,OAAO,wUAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAoB,GAAG;gBAAE,QAAQ;YAAI;QACzE;QAEA,MAAM,EAAE,aAAa,EAAE,GAAG,MAAM,QAAQ,IAAI;QAE5C,IAAI,CAAC,iBAAiB,OAAO,kBAAkB,UAAU;YACvD,OAAO,wUAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAiC,GAC1C;gBAAE,QAAQ;YAAI;QAElB;QAEA,0DAA0D;QAC1D,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU,CAAC;YACrD,MAAM;QACR;QAEA,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,iCAAiC;YAC/C,OAAO,wUAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,MAAM,OAAO;YAAC,GAAG;gBAAE,QAAQ;YAAI;QACnE;QAEA,OAAO,wUAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM,KAAK,IAAI;YACf,SAAS;QACX;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO,wUAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}