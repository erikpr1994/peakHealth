{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/lib/swr.ts"],"sourcesContent":["import { SWRConfiguration } from 'swr';\n\n// Default fetcher function\nexport const fetcher = async (url: string) => {\n  const response = await fetch(url);\n\n  if (!response.ok) {\n    const error = new Error('An error occurred while fetching the data.');\n    // Attach extra info to the error object\n    (error as any).info = await response.json();\n    (error as any).status = response.status;\n    throw error;\n  }\n\n  return response.json();\n};\n\n// Global SWR configuration\nexport const swrConfig: SWRConfiguration = {\n  fetcher,\n  revalidateOnFocus: false,\n  revalidateOnReconnect: true,\n  dedupingInterval: 2000,\n  errorRetryCount: 3,\n  errorRetryInterval: 5000,\n};\n"],"names":[],"mappings":";;;;AAGO,MAAM,UAAU,OAAO;IAC5B,MAAM,WAAW,MAAM,MAAM;IAE7B,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,QAAQ,IAAI,MAAM;QACxB,wCAAwC;QACvC,MAAc,IAAI,GAAG,MAAM,SAAS,IAAI;QACxC,MAAc,MAAM,GAAG,SAAS,MAAM;QACvC,MAAM;IACR;IAEA,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,YAA8B;IACzC;IACA,mBAAmB;IACnB,uBAAuB;IACvB,kBAAkB;IAClB,iBAAiB;IACjB,oBAAoB;AACtB","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/components/providers/SWRProvider.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode } from 'react';\nimport { SWRConfig } from 'swr';\n\nimport { swrConfig } from '@/lib/swr';\n\ninterface SWRProviderProps {\n  children: ReactNode;\n}\n\nexport const SWRProvider = ({ children }: SWRProviderProps) => {\n  return <SWRConfig value={swrConfig}>{children}</SWRConfig>;\n};\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAWO,MAAM,cAAc,CAAC,EAAE,QAAQ,EAAoB;IACxD,qBAAO,sbAAC,oOAAA,CAAA,YAAS;QAAC,OAAO,iHAAA,CAAA,YAAS;kBAAG;;;;;;AACvC","debugId":null}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/lib/supabase/client.ts"],"sourcesContent":["import { createBrowserClient } from '@supabase/ssr';\n\nexport function createClient() {\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\n  const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\n\n  return createBrowserClient(supabaseUrl, supabaseAnonKey);\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEO,SAAS;IACd,MAAM;IACN,MAAM;IAEN,OAAO,CAAA,GAAA,uRAAA,CAAA,sBAAmB,AAAD,EAAE,aAAa;AAC1C","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/auth/context/AuthContext.tsx"],"sourcesContent":["'use client';\n\nimport { User } from '@supabase/supabase-js';\nimport { useRouter } from 'next/navigation';\nimport React, {\n  createContext,\n  useContext,\n  ReactNode,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\nimport useSWR from 'swr';\n\nimport { createClient } from '@/lib/supabase/client';\n\n// Extended user type with our custom properties\nexport interface ExtendedUser extends User {\n  userRoles?: string[];\n  userGroups?: string[];\n}\n\nexport interface AuthContextType {\n  isAuthenticated: boolean;\n  isAuthOperationLoading: boolean;\n  login: (email?: string, password?: string) => Promise<void>;\n  logout: () => Promise<void>;\n  signUp: (email?: string, password?: string, name?: string) => Promise<void>;\n  user: ExtendedUser | null;\n  // Add convenience properties\n  userId: string | null;\n  userRoles: string[];\n  userGroups: string[];\n  // Add utility functions\n  hasRole: (role: string) => boolean;\n  hasGroup: (group: string) => boolean;\n  hasAnyRole: (roles: string[]) => boolean;\n  hasAnyGroup: (groups: string[]) => boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Custom fetcher for user endpoint that extracts user from response\nconst userFetcher = async (url: string): Promise<ExtendedUser | null> => {\n  const response = await fetch(url);\n\n  if (!response.ok) {\n    if (response.status === 401) {\n      // Not authenticated, return null\n      return null;\n    }\n    const error = new Error('An error occurred while fetching the user.');\n    (error as unknown as { info: unknown }).info = await response.json();\n    (error as unknown as { status: number }).status = response.status;\n    throw error;\n  }\n\n  const data = await response.json();\n  return data.user || null;\n};\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const supabase = createClient();\n  const router = useRouter();\n  const [isAuthOperationLoading, setIsAuthOperationLoading] = useState(false);\n\n  // Use SWR to manage user state with custom fetcher\n  const { data: user, mutate: mutateUser } = useSWR<ExtendedUser | null>(\n    '/api/auth/user',\n    userFetcher,\n    {\n      revalidateOnFocus: true,\n      shouldRetryOnError: false,\n      suspense: true,\n      fallbackData: null,\n    }\n  );\n\n  const handleAuthChange = useCallback(\n    async (event: string, session: { user: ExtendedUser } | null) => {\n      if (event === 'SIGNED_IN' || event === 'USER_UPDATED') {\n        await mutateUser();\n      } else if (event === 'SIGNED_OUT') {\n        await mutateUser(null, false);\n      }\n    },\n    [mutateUser]\n  );\n\n  // Set up real-time auth state synchronization\n  useEffect(() => {\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange((event, session) => {\n      handleAuthChange(event, session);\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [supabase, handleAuthChange]);\n\n  const getAuthRedirectPath = () => {\n    // Default to profile as a safe fallback that doesn't depend on feature flags\n    // In a real app, you might want to check feature flags here\n    return '/profile';\n  };\n\n  const login = async (email?: string, password?: string) => {\n    if (!email || !password) return;\n\n    setIsAuthOperationLoading(true);\n    try {\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Login failed');\n      }\n\n      // Optimistically update the user and redirect\n      await mutateUser(data.user, false); // `false` to prevent re-fetching\n      router.push(getAuthRedirectPath());\n    } finally {\n      setIsAuthOperationLoading(false);\n    }\n  };\n\n  const signUp = async (email?: string, password?: string, name?: string) => {\n    if (!email || !password || !name) return;\n\n    setIsAuthOperationLoading(true);\n    try {\n      const response = await fetch('/api/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password, name }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Sign up failed');\n      }\n\n      // Optimistically update the user and redirect\n      await mutateUser(data.user, false); // `false` to prevent re-fetching\n      router.push(getAuthRedirectPath());\n    } finally {\n      setIsAuthOperationLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    setIsAuthOperationLoading(true);\n    try {\n      const response = await fetch('/api/auth/logout', {\n        method: 'POST',\n      });\n\n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.error || 'Logout failed');\n      }\n\n      // Clear user from SWR cache and redirect immediately\n      await mutateUser(null, false);\n      router.push('/');\n    } finally {\n      setIsAuthOperationLoading(false);\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated: !!user,\n        isAuthOperationLoading,\n        login,\n        logout,\n        signUp,\n        user: user || null,\n        // Add convenience properties\n        userId: user?.id || null,\n        userRoles: user?.userRoles || [],\n        userGroups: user?.userGroups || [],\n        // Add utility functions\n        hasRole: role => user?.userRoles?.includes(role) || false,\n        hasGroup: group => user?.userGroups?.includes(group) || false,\n        hasAnyRole: roles =>\n          roles?.some(role => user?.userRoles?.includes(role)) || false,\n        hasAnyGroup: groups =>\n          groups?.some(group => user?.userGroups?.includes(group)) || false,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":"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","debugId":null}}]
}