{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/features/profile/Profile.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"container\": \"Profile-module__9RN9_q__container\",\n  \"content\": \"Profile-module__9RN9_q__content\",\n  \"errorMessage\": \"Profile-module__9RN9_q__errorMessage\",\n  \"errorState\": \"Profile-module__9RN9_q__errorState\",\n  \"header\": \"Profile-module__9RN9_q__header\",\n  \"loadingState\": \"Profile-module__9RN9_q__loadingState\",\n  \"mainContent\": \"Profile-module__9RN9_q__mainContent\",\n  \"sidebar\": \"Profile-module__9RN9_q__sidebar\",\n  \"title\": \"Profile-module__9RN9_q__title\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/features/profile/components/PersonalInfoCard/PersonalInfoCard.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"actions\": \"PersonalInfoCard-module__FrkrTG__actions\",\n  \"avatar\": \"PersonalInfoCard-module__FrkrTG__avatar\",\n  \"avatarFallback\": \"PersonalInfoCard-module__FrkrTG__avatarFallback\",\n  \"avatarSection\": \"PersonalInfoCard-module__FrkrTG__avatarSection\",\n  \"bioTextarea\": \"PersonalInfoCard-module__FrkrTG__bioTextarea\",\n  \"buttonIcon\": \"PersonalInfoCard-module__FrkrTG__buttonIcon\",\n  \"content\": \"PersonalInfoCard-module__FrkrTG__content\",\n  \"displayName\": \"PersonalInfoCard-module__FrkrTG__displayName\",\n  \"editButton\": \"PersonalInfoCard-module__FrkrTG__editButton\",\n  \"editNameFields\": \"PersonalInfoCard-module__FrkrTG__editNameFields\",\n  \"formGrid\": \"PersonalInfoCard-module__FrkrTG__formGrid\",\n  \"icon\": \"PersonalInfoCard-module__FrkrTG__icon\",\n  \"label\": \"PersonalInfoCard-module__FrkrTG__label\",\n  \"memberSince\": \"PersonalInfoCard-module__FrkrTG__memberSince\",\n  \"nameSection\": \"PersonalInfoCard-module__FrkrTG__nameSection\",\n  \"saveButton\": \"PersonalInfoCard-module__FrkrTG__saveButton\",\n  \"value\": \"PersonalInfoCard-module__FrkrTG__value\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/components/ui/card.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Card = ({ className, ...props }: React.ComponentProps<'div'>) => {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        'bg-card text-card-foreground flex flex-col gap-6 rounded-xl border',\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\nconst CardHeader = ({ className, ...props }: React.ComponentProps<'div'>) => {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        '@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 pt-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6',\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\nconst CardTitle = ({ className, ...props }: React.ComponentProps<'div'>) => {\n  return (\n    <h4\n      data-slot=\"card-title\"\n      className={cn('leading-none', className)}\n      {...props}\n    />\n  );\n};\n\nconst CardDescription = ({\n  className,\n  ...props\n}: React.ComponentProps<'div'>) => {\n  return (\n    <p\n      data-slot=\"card-description\"\n      className={cn('text-muted-foreground', className)}\n      {...props}\n    />\n  );\n};\n\nconst CardAction = ({ className, ...props }: React.ComponentProps<'div'>) => {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        'col-start-2 row-span-2 row-start-1 self-start justify-self-end',\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\nconst CardContent = ({ className, ...props }: React.ComponentProps<'div'>) => {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn('px-6 [&:last-child]:pb-6', className)}\n      {...props}\n    />\n  );\n};\n\nconst CardFooter = ({ className, ...props }: React.ComponentProps<'div'>) => {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn('flex items-center px-6 pb-6 [.border-t]:pt-6', className)}\n      {...props}\n    />\n  );\n};\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n};\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,MAAM,OAAO;QAAC,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sEACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXM;AAaN,MAAM,aAAa;QAAC,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mKACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXM;AAaN,MAAM,YAAY;QAAC,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gBAAgB;QAC7B,GAAG,KAAK;;;;;;AAGf;MARM;AAUN,MAAM,kBAAkB;QAAC,EACvB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGf;MAXM;AAaN,MAAM,aAAa;QAAC,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXM;AAaN,MAAM,cAAc;QAAC,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;;;;;AAGf;MARM;AAUN,MAAM,aAAa;QAAC,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;MARM","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/components/ui/input.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Input = ({\n  className,\n  type,\n  ...props\n}: React.ComponentProps<'input'>) => {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        'file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border px-3 py-1 text-base bg-input-background transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n        'focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]',\n        'aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive',\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\nexport { Input };\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,MAAM,QAAQ;QAAC,EACb,SAAS,EACT,IAAI,EACJ,GAAG,OAC2B;IAC9B,qBACE,qYAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8bACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAlBM","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/components/ui/label.tsx"],"sourcesContent":["'use client';\n\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Label = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) => {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        'flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50',\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\nexport { Label };\n"],"names":[],"mappings":";;;;AAEA;AAGA;AALA;;;;AAOA,MAAM,QAAQ;QAAC,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,qYAAC,wXAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdM","debugId":null}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Textarea = ({\n  className,\n  ...props\n}: React.ComponentProps<'textarea'>) => {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        'resize-none border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-input-background px-3 py-2 text-base transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\nexport { Textarea };\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,MAAM,WAAW;QAAC,EAChB,SAAS,EACT,GAAG,OAC8B;IACjC,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8cACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdM","debugId":null}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/profile/components/PersonalInfoCard/PersonalInfoCard.tsx"],"sourcesContent":["'use client';\n\nimport { Mail, Phone, MapPin, Calendar, Edit2, Save } from 'lucide-react';\nimport React, { useState } from 'react';\n\nimport { UserMetadata } from '../../types/profile';\n\nimport styles from './PersonalInfoCard.module.css';\n\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\n\ninterface PersonalInfoCardProps {\n  user: {\n    id: string;\n    email?: string;\n    user_metadata: UserMetadata;\n    created_at?: string;\n  };\n  onUpdateMetadata: (metadata: Record<string, unknown>) => Promise<boolean>;\n  isUpdating?: boolean;\n}\n\nexport const PersonalInfoCard = ({\n  user,\n  onUpdateMetadata,\n  isUpdating = false,\n}: PersonalInfoCardProps) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [formData, setFormData] = useState({\n    name: user.user_metadata.name || '',\n    display_name: user.user_metadata.display_name || '',\n    phone: user.user_metadata.phone || '',\n    location: user.user_metadata.location || '',\n    birth_date: user.user_metadata.birth_date || '',\n    bio: user.user_metadata.bio || '',\n  });\n\n  const handleSave = async () => {\n    const success = await onUpdateMetadata({\n      name: formData.name,\n      display_name: formData.display_name,\n      phone: formData.phone,\n      location: formData.location,\n      birth_date: formData.birth_date,\n      bio: formData.bio,\n    });\n\n    if (success) {\n      setIsEditing(false);\n    }\n  };\n\n  const handleCancel = () => {\n    setFormData({\n      name: user.user_metadata.name || '',\n      display_name: user.user_metadata.display_name || '',\n      phone: user.user_metadata.phone || '',\n      location: user.user_metadata.location || '',\n      birth_date: user.user_metadata.birth_date || '',\n      bio: user.user_metadata.bio || '',\n    });\n    setIsEditing(false);\n  };\n\n  const formatDate = (dateString: string) => {\n    if (!dateString) return '';\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    });\n  };\n\n  const displayName =\n    formData.display_name ||\n    formData.name ||\n    (user.email ? user.email.split('@')[0] : 'User');\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Personal Information</CardTitle>\n      </CardHeader>\n      <CardContent className={styles.content}>\n        <div className={styles.avatarSection}>\n          <Avatar className={styles.avatar}>\n            <AvatarImage\n              src={user.user_metadata.avatar_url || `/api/placeholder/80/80`}\n              alt={displayName}\n            />\n            <AvatarFallback className={styles.avatarFallback}>\n              {displayName\n                .split(' ')\n                .map(n => n[0])\n                .join('')}\n            </AvatarFallback>\n          </Avatar>\n          <div className={styles.nameSection}>\n            {isEditing ? (\n              <div className={styles.editNameFields}>\n                <div>\n                  <Label htmlFor=\"name\">Full Name</Label>\n                  <Input\n                    id=\"name\"\n                    value={formData.name}\n                    onChange={e =>\n                      setFormData({ ...formData, name: e.target.value })\n                    }\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"display_name\">Display Name</Label>\n                  <Input\n                    id=\"display_name\"\n                    value={formData.display_name}\n                    onChange={e =>\n                      setFormData({ ...formData, display_name: e.target.value })\n                    }\n                  />\n                </div>\n              </div>\n            ) : (\n              <div>\n                <h3 className={styles.displayName}>{displayName}</h3>\n                <p className={styles.memberSince}>\n                  Peak Health Member since{' '}\n                  {user.created_at\n                    ? new Date(user.created_at).getFullYear()\n                    : '2024'}\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className={styles.formGrid}>\n          <div>\n            <Label htmlFor=\"email\" className={styles.label}>\n              <Mail className={styles.icon} />\n              Email\n            </Label>\n            <p className={styles.value}>{user.email || 'Not provided'}</p>\n          </div>\n\n          <div>\n            <Label htmlFor=\"phone\" className={styles.label}>\n              <Phone className={styles.icon} />\n              Phone\n            </Label>\n            {isEditing ? (\n              <Input\n                id=\"phone\"\n                value={formData.phone}\n                onChange={e =>\n                  setFormData({ ...formData, phone: e.target.value })\n                }\n              />\n            ) : (\n              <p className={styles.value}>{formData.phone || 'Not provided'}</p>\n            )}\n          </div>\n\n          <div>\n            <Label htmlFor=\"location\" className={styles.label}>\n              <MapPin className={styles.icon} />\n              Location\n            </Label>\n            {isEditing ? (\n              <Input\n                id=\"location\"\n                value={formData.location}\n                onChange={e =>\n                  setFormData({ ...formData, location: e.target.value })\n                }\n              />\n            ) : (\n              <p className={styles.value}>\n                {formData.location || 'Not provided'}\n              </p>\n            )}\n          </div>\n\n          <div>\n            <Label htmlFor=\"birth_date\" className={styles.label}>\n              <Calendar className={styles.icon} />\n              Birth Date\n            </Label>\n            {isEditing ? (\n              <Input\n                id=\"birth_date\"\n                type=\"date\"\n                value={formData.birth_date}\n                onChange={e =>\n                  setFormData({ ...formData, birth_date: e.target.value })\n                }\n              />\n            ) : (\n              <p className={styles.value}>\n                {formData.birth_date\n                  ? formatDate(formData.birth_date)\n                  : 'Not provided'}\n              </p>\n            )}\n          </div>\n        </div>\n\n        <div>\n          <Label htmlFor=\"bio\">Bio</Label>\n          {isEditing ? (\n            <Textarea\n              id=\"bio\"\n              value={formData.bio}\n              onChange={e => setFormData({ ...formData, bio: e.target.value })}\n              className={styles.bioTextarea}\n              rows={3}\n            />\n          ) : (\n            <p className={styles.value}>{formData.bio || 'No bio provided'}</p>\n          )}\n        </div>\n\n        <div className={styles.actions}>\n          {isEditing ? (\n            <>\n              <Button\n                onClick={handleSave}\n                disabled={isUpdating}\n                className={styles.saveButton}\n              >\n                <Save className={styles.buttonIcon} />\n                {isUpdating ? 'Saving...' : 'Save Changes'}\n              </Button>\n              <Button variant=\"outline\" onClick={handleCancel}>\n                Cancel\n              </Button>\n            </>\n          ) : (\n            <Button\n              onClick={() => setIsEditing(true)}\n              className={styles.editButton}\n            >\n              <Edit2 className={styles.buttonIcon} />\n              Edit Profile\n            </Button>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 789, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/profile/components/PersonalInfoCard/index.ts"],"sourcesContent":["export { PersonalInfoCard } from './PersonalInfoCard';\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 805, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/features/profile/components/ActivityStatsCard/ActivityStatsCard.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"content\": \"ActivityStatsCard-module__XMRtyG__content\",\n  \"icon\": \"ActivityStatsCard-module__XMRtyG__icon\",\n  \"statIcon\": \"ActivityStatsCard-module__XMRtyG__statIcon\",\n  \"statInfo\": \"ActivityStatsCard-module__XMRtyG__statInfo\",\n  \"statItem\": \"ActivityStatsCard-module__XMRtyG__statItem\",\n  \"statLabel\": \"ActivityStatsCard-module__XMRtyG__statLabel\",\n  \"statValue\": \"ActivityStatsCard-module__XMRtyG__statValue\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 820, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/profile/components/ActivityStatsCard/ActivityStatsCard.tsx"],"sourcesContent":["import { Dumbbell, Calendar, Award, Clock } from 'lucide-react';\nimport React from 'react';\n\nimport { UserStats } from '../../types/profile';\n\nimport styles from './ActivityStatsCard.module.css';\n\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\n\ninterface ActivityStatsCardProps {\n  stats: UserStats;\n}\n\nexport const ActivityStatsCard = ({ stats }: ActivityStatsCardProps) => {\n  const statsData = [\n    {\n      label: 'Total Workouts',\n      value: stats.total_workouts.toString(),\n      icon: Dumbbell,\n    },\n    {\n      label: 'Days Active',\n      value: stats.days_active.toString(),\n      icon: Calendar,\n    },\n    {\n      label: 'Achievements',\n      value: stats.achievements_count.toString(),\n      icon: Award,\n    },\n    {\n      label: 'Hours Trained',\n      value: stats.hours_trained.toFixed(1),\n      icon: Clock,\n    },\n  ];\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Activity Stats</CardTitle>\n      </CardHeader>\n      <CardContent className={styles.content}>\n        {statsData.map((stat, index) => {\n          const Icon = stat.icon;\n          return (\n            <div key={index} className={styles.statItem}>\n              <div className={styles.statInfo}>\n                <div className={styles.statIcon}>\n                  <Icon className={styles.icon} />\n                </div>\n                <span className={styles.statLabel}>{stat.label}</span>\n              </div>\n              <span className={styles.statValue}>{stat.value}</span>\n            </div>\n          );\n        })}\n      </CardContent>\n    </Card>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;;;;;AAMO,MAAM,oBAAoB;QAAC,EAAE,KAAK,EAA0B;IACjE,MAAM,YAAY;QAChB;YACE,OAAO;YACP,OAAO,MAAM,cAAc,CAAC,QAAQ;YACpC,MAAM,iSAAA,CAAA,WAAQ;QAChB;QACA;YACE,OAAO;YACP,OAAO,MAAM,WAAW,CAAC,QAAQ;YACjC,MAAM,iSAAA,CAAA,WAAQ;QAChB;QACA;YACE,OAAO;YACP,OAAO,MAAM,kBAAkB,CAAC,QAAQ;YACxC,MAAM,2RAAA,CAAA,QAAK;QACb;QACA;YACE,OAAO;YACP,OAAO,MAAM,aAAa,CAAC,OAAO,CAAC;YACnC,MAAM,2RAAA,CAAA,QAAK;QACb;KACD;IAED,qBACE,qYAAC,mIAAA,CAAA,OAAI;;0BACH,qYAAC,mIAAA,CAAA,aAAU;0BACT,cAAA,qYAAC,mIAAA,CAAA,YAAS;8BAAC;;;;;;;;;;;0BAEb,qYAAC,mIAAA,CAAA,cAAW;gBAAC,WAAW,iMAAA,CAAA,UAAM,CAAC,OAAO;0BACnC,UAAU,GAAG,CAAC,CAAC,MAAM;oBACpB,MAAM,OAAO,KAAK,IAAI;oBACtB,qBACE,qYAAC;wBAAgB,WAAW,iMAAA,CAAA,UAAM,CAAC,QAAQ;;0CACzC,qYAAC;gCAAI,WAAW,iMAAA,CAAA,UAAM,CAAC,QAAQ;;kDAC7B,qYAAC;wCAAI,WAAW,iMAAA,CAAA,UAAM,CAAC,QAAQ;kDAC7B,cAAA,qYAAC;4CAAK,WAAW,iMAAA,CAAA,UAAM,CAAC,IAAI;;;;;;;;;;;kDAE9B,qYAAC;wCAAK,WAAW,iMAAA,CAAA,UAAM,CAAC,SAAS;kDAAG,KAAK,KAAK;;;;;;;;;;;;0CAEhD,qYAAC;gCAAK,WAAW,iMAAA,CAAA,UAAM,CAAC,SAAS;0CAAG,KAAK,KAAK;;;;;;;uBAPtC;;;;;gBAUd;;;;;;;;;;;;AAIR;KA/Ca","debugId":null}},
    {"offset": {"line": 950, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/profile/components/ActivityStatsCard/index.ts"],"sourcesContent":["export { ActivityStatsCard } from './ActivityStatsCard';\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 966, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/features/profile/components/AchievementsCard/AchievementsCard.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"achievementDate\": \"AchievementsCard-module__sal7hq__achievementDate\",\n  \"achievementIcon\": \"AchievementsCard-module__sal7hq__achievementIcon\",\n  \"achievementInfo\": \"AchievementsCard-module__sal7hq__achievementInfo\",\n  \"achievementItem\": \"AchievementsCard-module__sal7hq__achievementItem\",\n  \"achievementTitle\": \"AchievementsCard-module__sal7hq__achievementTitle\",\n  \"blue\": \"AchievementsCard-module__sal7hq__blue\",\n  \"content\": \"AchievementsCard-module__sal7hq__content\",\n  \"default\": \"AchievementsCard-module__sal7hq__default\",\n  \"emptyState\": \"AchievementsCard-module__sal7hq__emptyState\",\n  \"green\": \"AchievementsCard-module__sal7hq__green\",\n  \"iconText\": \"AchievementsCard-module__sal7hq__iconText\",\n  \"orange\": \"AchievementsCard-module__sal7hq__orange\",\n  \"yellow\": \"AchievementsCard-module__sal7hq__yellow\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 987, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/profile/components/AchievementsCard/AchievementsCard.tsx"],"sourcesContent":["import React from 'react';\n\nimport { UserAchievement } from '../../types/profile';\n\nimport styles from './AchievementsCard.module.css';\n\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\n\ninterface AchievementsCardProps {\n  achievements: UserAchievement[];\n}\n\nexport const AchievementsCard = ({ achievements }: AchievementsCardProps) => {\n  const formatDate = (date: Date) => {\n    return new Date(date).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n    });\n  };\n\n  const getAchievementColor = (achievementType: string) => {\n    switch (achievementType) {\n      case 'first_workout':\n        return styles.yellow;\n      case 'workout_streak_10':\n        return styles.orange;\n      case 'days_active_30':\n        return styles.blue;\n      case 'hours_trained_50':\n        return styles.green;\n      default:\n        return styles.default;\n    }\n  };\n\n  if (achievements.length === 0) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Recent Achievements</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className={styles.emptyState}>\n            No achievements yet. Start working out to earn your first badge!\n          </p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Recent Achievements</CardTitle>\n      </CardHeader>\n      <CardContent className={styles.content}>\n        {achievements.slice(0, 3).map(achievement => (\n          <div key={achievement.id} className={styles.achievementItem}>\n            <div\n              className={`${styles.achievementIcon} ${getAchievementColor(achievement.achievement_type)}`}\n            >\n              <span className={styles.iconText}>{achievement.icon}</span>\n            </div>\n            <div className={styles.achievementInfo}>\n              <p className={styles.achievementTitle}>{achievement.title}</p>\n              <p className={styles.achievementDate}>\n                Earned {formatDate(achievement.earned_at)}\n              </p>\n            </div>\n          </div>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n"],"names":[],"mappings":";;;;AAIA;AAEA;;;;AAMO,MAAM,mBAAmB;QAAC,EAAE,YAAY,EAAyB;IACtE,MAAM,aAAa,CAAC;QAClB,OAAO,IAAI,KAAK,MAAM,kBAAkB,CAAC,SAAS;YAChD,OAAO;YACP,KAAK;QACP;IACF;IAEA,MAAM,sBAAsB,CAAC;QAC3B,OAAQ;YACN,KAAK;gBACH,OAAO,+LAAA,CAAA,UAAM,CAAC,MAAM;YACtB,KAAK;gBACH,OAAO,+LAAA,CAAA,UAAM,CAAC,MAAM;YACtB,KAAK;gBACH,OAAO,+LAAA,CAAA,UAAM,CAAC,IAAI;YACpB,KAAK;gBACH,OAAO,+LAAA,CAAA,UAAM,CAAC,KAAK;YACrB;gBACE,OAAO,+LAAA,CAAA,UAAM,CAAC,OAAO;QACzB;IACF;IAEA,IAAI,aAAa,MAAM,KAAK,GAAG;QAC7B,qBACE,qYAAC,mIAAA,CAAA,OAAI;;8BACH,qYAAC,mIAAA,CAAA,aAAU;8BACT,cAAA,qYAAC,mIAAA,CAAA,YAAS;kCAAC;;;;;;;;;;;8BAEb,qYAAC,mIAAA,CAAA,cAAW;8BACV,cAAA,qYAAC;wBAAE,WAAW,+LAAA,CAAA,UAAM,CAAC,UAAU;kCAAE;;;;;;;;;;;;;;;;;IAMzC;IAEA,qBACE,qYAAC,mIAAA,CAAA,OAAI;;0BACH,qYAAC,mIAAA,CAAA,aAAU;0BACT,cAAA,qYAAC,mIAAA,CAAA,YAAS;8BAAC;;;;;;;;;;;0BAEb,qYAAC,mIAAA,CAAA,cAAW;gBAAC,WAAW,+LAAA,CAAA,UAAM,CAAC,OAAO;0BACnC,aAAa,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAA,4BAC5B,qYAAC;wBAAyB,WAAW,+LAAA,CAAA,UAAM,CAAC,eAAe;;0CACzD,qYAAC;gCACC,WAAW,AAAC,GAA4B,OAA1B,+LAAA,CAAA,UAAM,CAAC,eAAe,EAAC,KAAqD,OAAlD,oBAAoB,YAAY,gBAAgB;0CAExF,cAAA,qYAAC;oCAAK,WAAW,+LAAA,CAAA,UAAM,CAAC,QAAQ;8CAAG,YAAY,IAAI;;;;;;;;;;;0CAErD,qYAAC;gCAAI,WAAW,+LAAA,CAAA,UAAM,CAAC,eAAe;;kDACpC,qYAAC;wCAAE,WAAW,+LAAA,CAAA,UAAM,CAAC,gBAAgB;kDAAG,YAAY,KAAK;;;;;;kDACzD,qYAAC;wCAAE,WAAW,+LAAA,CAAA,UAAM,CAAC,eAAe;;4CAAE;4CAC5B,WAAW,YAAY,SAAS;;;;;;;;;;;;;;uBATpC,YAAY,EAAE;;;;;;;;;;;;;;;;AAiBlC;KA9Da","debugId":null}},
    {"offset": {"line": 1148, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/profile/components/AchievementsCard/index.ts"],"sourcesContent":["export { AchievementsCard } from './AchievementsCard';\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 1164, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/features/profile/components/FitnessProfileCard/FitnessProfileCard.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"badge\": \"FitnessProfileCard-module__RL8LLa__badge\",\n  \"badgeContainer\": \"FitnessProfileCard-module__RL8LLa__badgeContainer\",\n  \"buttonIcon\": \"FitnessProfileCard-module__RL8LLa__buttonIcon\",\n  \"completedAt\": \"FitnessProfileCard-module__RL8LLa__completedAt\",\n  \"content\": \"FitnessProfileCard-module__RL8LLa__content\",\n  \"emptyState\": \"FitnessProfileCard-module__RL8LLa__emptyState\",\n  \"grid\": \"FitnessProfileCard-module__RL8LLa__grid\",\n  \"header\": \"FitnessProfileCard-module__RL8LLa__header\",\n  \"icon\": \"FitnessProfileCard-module__RL8LLa__icon\",\n  \"label\": \"FitnessProfileCard-module__RL8LLa__label\",\n  \"labelText\": \"FitnessProfileCard-module__RL8LLa__labelText\",\n  \"retakeButton\": \"FitnessProfileCard-module__RL8LLa__retakeButton\",\n  \"separator\": \"FitnessProfileCard-module__RL8LLa__separator\",\n  \"textBox\": \"FitnessProfileCard-module__RL8LLa__textBox\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 1186, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/components/ui/separator.tsx"],"sourcesContent":["'use client';\n\nimport * as SeparatorPrimitive from '@radix-ui/react-separator';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Separator = ({\n  className,\n  orientation = 'horizontal',\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) => {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator-root\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        'bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px',\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\nexport { Separator };\n"],"names":[],"mappings":";;;;AAEA;AAGA;AALA;;;;AAOA,MAAM,YAAY;QAAC,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACkD;IACrD,qBACE,qYAAC,yXAAA,CAAA,OAAuB;QACtB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAGf;KAlBM","debugId":null}},
    {"offset": {"line": 1223, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/profile/components/FitnessProfileCard/FitnessProfileCard.tsx"],"sourcesContent":["import {\n  Award,\n  Clock,\n  Dumbbell,\n  User,\n  Target,\n  Sparkles,\n  RefreshCw,\n} from 'lucide-react';\nimport React from 'react';\n\nimport { UserProfile } from '../../types/profile';\n\nimport styles from './FitnessProfileCard.module.css';\n\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Separator } from '@/components/ui/separator';\n\ninterface FitnessProfileCardProps {\n  profile: UserProfile;\n}\n\nexport const FitnessProfileCard = ({ profile }: FitnessProfileCardProps) => {\n  const handleRetakeOnboarding = () => {\n    // Clear onboarding data to trigger onboarding flow again\n    if (typeof window !== 'undefined') {\n      localStorage.removeItem('peak-health-onboarding-complete');\n      localStorage.removeItem('peak-health-onboarding-data');\n      window.location.reload(); // Reload to trigger onboarding\n    }\n  };\n\n  const formatDate = (date: Date) => {\n    return new Date(date).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    });\n  };\n\n  // If no profile data exists, show empty state\n  if (!profile.fitness_level && !profile.goals?.length) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Fitness Profile</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className={styles.emptyState}>\n            No fitness profile data available. Complete the onboarding to get\n            personalized recommendations.\n          </p>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={handleRetakeOnboarding}\n            className={styles.retakeButton}\n          >\n            <RefreshCw className={styles.buttonIcon} />\n            Take Onboarding Quiz\n          </Button>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader className={styles.header}>\n        <CardTitle>Fitness Profile</CardTitle>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={handleRetakeOnboarding}\n          className={styles.retakeButton}\n        >\n          <RefreshCw className={styles.buttonIcon} />\n          Retake Quiz\n        </Button>\n      </CardHeader>\n      <CardContent className={styles.content}>\n        <div className={styles.grid}>\n          {profile.fitness_level && (\n            <div>\n              <Label className={styles.label}>\n                <Award className={styles.icon} />\n                Fitness Level\n              </Label>\n              <Badge variant=\"secondary\" className={styles.badge}>\n                {profile.fitness_level}\n              </Badge>\n            </div>\n          )}\n\n          {profile.time_available && (\n            <div>\n              <Label className={styles.label}>\n                <Clock className={styles.icon} />\n                Time Available\n              </Label>\n              <Badge variant=\"outline\" className={styles.badge}>\n                {profile.time_available}\n              </Badge>\n            </div>\n          )}\n\n          {profile.equipment_access && (\n            <div>\n              <Label className={styles.label}>\n                <Dumbbell className={styles.icon} />\n                Equipment Access\n              </Label>\n              <Badge variant=\"outline\" className={styles.badge}>\n                {profile.equipment_access}\n              </Badge>\n            </div>\n          )}\n\n          {profile.experience && (\n            <div>\n              <Label className={styles.label}>\n                <User className={styles.icon} />\n                Experience\n              </Label>\n              <Badge variant=\"outline\" className={styles.badge}>\n                {profile.experience}\n              </Badge>\n            </div>\n          )}\n        </div>\n\n        <Separator className={styles.separator} />\n\n        {profile.goals && profile.goals.length > 0 && (\n          <div>\n            <Label className={styles.label}>\n              <Target className={styles.icon} />\n              Fitness Goals\n            </Label>\n            <div className={styles.badgeContainer}>\n              {profile.goals.map((goal, index) => (\n                <Badge key={index} className={styles.badge}>\n                  {goal}\n                </Badge>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {profile.workout_types && profile.workout_types.length > 0 && (\n          <div>\n            <Label className={styles.label}>\n              <Sparkles className={styles.icon} />\n              Preferred Workout Types\n            </Label>\n            <div className={styles.badgeContainer}>\n              {profile.workout_types.map((type, index) => (\n                <Badge key={index} variant=\"secondary\" className={styles.badge}>\n                  {type}\n                </Badge>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {profile.limitations && (\n          <div>\n            <Label className={styles.label}>Physical Considerations</Label>\n            <p className={styles.textBox}>{profile.limitations}</p>\n          </div>\n        )}\n\n        {profile.motivation && (\n          <div>\n            <Label className={styles.label}>Motivation</Label>\n            <p className={styles.textBox}>{profile.motivation}</p>\n          </div>\n        )}\n\n        {profile.onboarding_completed_at && (\n          <div className={styles.completedAt}>\n            Profile created: {formatDate(profile.onboarding_completed_at)}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\n// Label component for consistency\nconst Label = ({\n  children,\n  className,\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) => {\n  return (\n    <div className={`${styles.labelText} ${className || ''}`}>{children}</div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1696, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/profile/components/FitnessProfileCard/index.ts"],"sourcesContent":["export { FitnessProfileCard } from './FitnessProfileCard';\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 1715, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/profile/components/index.ts"],"sourcesContent":["export { PersonalInfoCard } from './PersonalInfoCard';\nexport { ActivityStatsCard } from './ActivityStatsCard';\nexport { AchievementsCard } from './AchievementsCard';\nexport { FitnessProfileCard } from './FitnessProfileCard';\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 1743, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/profile/services/userProfileService.ts"],"sourcesContent":["import {\n  ProfileApiResponse,\n  ProfileUpdateData,\n  ProfileUpdateResponse,\n} from '../types/profile';\n\nclass UserProfileService {\n  private baseUrl = '/api/profile';\n\n  async getUserProfile(): Promise<ProfileApiResponse> {\n    const response = await fetch(this.baseUrl, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch profile: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  async updateUserProfile(\n    data: ProfileUpdateData\n  ): Promise<ProfileUpdateResponse> {\n    const response = await fetch(this.baseUrl, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(\n        errorData.error || `Failed to update profile: ${response.statusText}`\n      );\n    }\n\n    return response.json();\n  }\n\n  async updateUserMetadata(metadata: Record<string, unknown>): Promise<void> {\n    const response = await fetch('/api/auth/user', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ user_metadata: metadata }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(\n        errorData.error ||\n          `Failed to update user metadata: ${response.statusText}`\n      );\n    }\n  }\n}\n\nexport const userProfileService = new UserProfileService();\n"],"names":[],"mappings":";;;;;AAMA,MAAM;IAGJ,MAAM,iBAA8C;QAClD,MAAM,WAAW,MAAM,MAAM,IAAI,CAAC,OAAO,EAAE;YACzC,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,AAAC,4BAA+C,OAApB,SAAS,UAAU;QACjE;QAEA,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,kBACJ,IAAuB,EACS;QAChC,MAAM,WAAW,MAAM,MAAM,IAAI,CAAC,OAAO,EAAE;YACzC,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;QACvB;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC,CAAC,CAAC;YACvD,MAAM,IAAI,MACR,UAAU,KAAK,IAAI,AAAC,6BAAgD,OAApB,SAAS,UAAU;QAEvE;QAEA,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,mBAAmB,QAAiC,EAAiB;QACzE,MAAM,WAAW,MAAM,MAAM,kBAAkB;YAC7C,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE,eAAe;YAAS;QACjD;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC,CAAC,CAAC;YACvD,MAAM,IAAI,MACR,UAAU,KAAK,IACb,AAAC,mCAAsD,OAApB,SAAS,UAAU;QAE5D;IACF;;QAtDA,6OAAQ,WAAU;;AAuDpB;AAEO,MAAM,qBAAqB,IAAI","debugId":null}},
    {"offset": {"line": 1804, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/profile/hooks/useUserProfile.ts"],"sourcesContent":["import useSWR from 'swr';\n\nimport { userProfileService } from '../services/userProfileService';\nimport { ProfileApiResponse } from '../types/profile';\n\nexport function useUserProfile() {\n  const { data, error, mutate, isLoading } = useSWR<ProfileApiResponse>(\n    '/api/profile',\n    () => userProfileService.getUserProfile(),\n    {\n      revalidateOnFocus: false,\n      revalidateOnReconnect: true,\n      errorRetryCount: 3,\n    }\n  );\n\n  return {\n    profile: data?.profile,\n    stats: data?.stats,\n    achievements: data?.achievements,\n    isLoading,\n    error,\n    mutate,\n  };\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;;;;AAGO,SAAS;;IACd,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,uOAAA,CAAA,UAAM,AAAD,EAC9C;iCACA,IAAM,+JAAA,CAAA,qBAAkB,CAAC,cAAc;gCACvC;QACE,mBAAmB;QACnB,uBAAuB;QACvB,iBAAiB;IACnB;IAGF,OAAO;QACL,OAAO,EAAE,iBAAA,2BAAA,KAAM,OAAO;QACtB,KAAK,EAAE,iBAAA,2BAAA,KAAM,KAAK;QAClB,YAAY,EAAE,iBAAA,2BAAA,KAAM,YAAY;QAChC;QACA;QACA;IACF;AACF;GAnBgB;;QAC6B,uOAAA,CAAA,UAAM","debugId":null}},
    {"offset": {"line": 1844, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/profile/hooks/useProfileUpdate.ts"],"sourcesContent":["import { useState } from 'react';\n\nimport { userProfileService } from '../services/userProfileService';\nimport { ProfileUpdateData, ProfileUpdateResponse } from '../types/profile';\n\nexport function useProfileUpdate() {\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const updateProfile = async (\n    data: ProfileUpdateData\n  ): Promise<ProfileUpdateResponse | null> => {\n    setIsUpdating(true);\n    setError(null);\n\n    try {\n      const response = await userProfileService.updateUserProfile(data);\n      return response;\n    } catch (err) {\n      const errorMessage =\n        err instanceof Error ? err.message : 'Failed to update profile';\n      setError(errorMessage);\n      return null;\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n\n  const updateUserMetadata = async (\n    metadata: Record<string, unknown>\n  ): Promise<boolean> => {\n    setIsUpdating(true);\n    setError(null);\n\n    try {\n      await userProfileService.updateUserMetadata(metadata);\n      return true;\n    } catch (err) {\n      const errorMessage =\n        err instanceof Error ? err.message : 'Failed to update user metadata';\n      setError(errorMessage);\n      return false;\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n\n  return {\n    updateProfile,\n    updateUserMetadata,\n    isUpdating,\n    error,\n    clearError: () => setError(null),\n  };\n}\n"],"names":[],"mappings":";;;AAAA;AAEA;;;;AAGO,SAAS;;IACd,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qWAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qWAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,gBAAgB,OACpB;QAEA,cAAc;QACd,SAAS;QAET,IAAI;YACF,MAAM,WAAW,MAAM,+JAAA,CAAA,qBAAkB,CAAC,iBAAiB,CAAC;YAC5D,OAAO;QACT,EAAE,OAAO,KAAK;YACZ,MAAM,eACJ,eAAe,QAAQ,IAAI,OAAO,GAAG;YACvC,SAAS;YACT,OAAO;QACT,SAAU;YACR,cAAc;QAChB;IACF;IAEA,MAAM,qBAAqB,OACzB;QAEA,cAAc;QACd,SAAS;QAET,IAAI;YACF,MAAM,+JAAA,CAAA,qBAAkB,CAAC,kBAAkB,CAAC;YAC5C,OAAO;QACT,EAAE,OAAO,KAAK;YACZ,MAAM,eACJ,eAAe,QAAQ,IAAI,OAAO,GAAG;YACvC,SAAS;YACT,OAAO;QACT,SAAU;YACR,cAAc;QAChB;IACF;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA,YAAY,IAAM,SAAS;IAC7B;AACF;GAjDgB","debugId":null}},
    {"offset": {"line": 1902, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/profile/types/profile.ts"],"sourcesContent":["// Profile System Types\n\nexport interface UserProfile {\n  id: string;\n  bio?: string;\n  fitness_level?: string;\n  time_available?: string;\n  equipment_access?: string;\n  experience?: string;\n  goals?: string[];\n  workout_types?: string[];\n  limitations?: string;\n  motivation?: string;\n  onboarding_completed_at?: Date;\n  created_at?: Date;\n  updated_at?: Date;\n}\n\nexport interface UserStats {\n  user_id: string;\n  total_workouts: number;\n  days_active: number;\n  hours_trained: number;\n  achievements_count: number;\n  last_updated: Date;\n}\n\nexport interface UserAchievement {\n  id: string;\n  user_id: string;\n  achievement_type: string;\n  title: string;\n  description?: string;\n  icon: string;\n  earned_at: Date;\n}\n\nexport interface FullUserProfile {\n  profile: UserProfile;\n  stats: UserStats;\n  achievements: UserAchievement[];\n}\n\n// Profile update types\nexport interface ProfileUpdateData {\n  bio?: string;\n  fitness_level?: string;\n  time_available?: string;\n  equipment_access?: string;\n  experience?: string;\n  goals?: string[];\n  workout_types?: string[];\n  limitations?: string;\n  motivation?: string;\n}\n\n// User metadata types (for basic profile info)\nexport interface UserMetadata {\n  name?: string;\n  display_name?: string;\n  avatar_url?: string;\n  phone?: string;\n  location?: string;\n  birth_date?: string;\n  bio?: string;\n  roles?: string[];\n  groups?: string[];\n}\n\n// Extended user type with profile data\nexport interface ExtendedUserWithProfile {\n  id: string;\n  email: string;\n  user_metadata: UserMetadata;\n  profile: UserProfile;\n  stats: UserStats;\n  achievements: UserAchievement[];\n}\n\n// API response types\nexport interface ProfileApiResponse {\n  profile: UserProfile;\n  stats: UserStats;\n  achievements: UserAchievement[];\n}\n\nexport interface ProfileUpdateResponse {\n  success: boolean;\n  profile: UserProfile;\n  message?: string;\n}\n"],"names":[],"mappings":"AAAA,uBAAuB","debugId":null}},
    {"offset": {"line": 1914, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/profile/index.ts"],"sourcesContent":["// Components\nexport * from './components';\n\n// Hooks\nexport { useUserProfile } from './hooks/useUserProfile';\nexport { useProfileUpdate } from './hooks/useProfileUpdate';\n\n// Services\nexport { userProfileService } from './services/userProfileService';\n\n// Types\nexport * from './types/profile';\n"],"names":[],"mappings":"AAAA,aAAa;;AACb;AAEA,QAAQ;AACR;AACA;AAEA,WAAW;AACX;AAEA,QAAQ;AACR","debugId":null}},
    {"offset": {"line": 1949, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/profile/Profile.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\nimport styles from './Profile.module.css';\n\nimport {\n  ActivityStatsCard,\n  AchievementsCard,\n  FitnessProfileCard,\n  PersonalInfoCard,\n  useUserProfile,\n  useProfileUpdate,\n} from './index';\n\nimport { useAuth } from '@/features/auth/context/AuthContext';\n\nconst Profile = () => {\n  const { user } = useAuth();\n  const { profile, stats, achievements, error } = useUserProfile();\n  const {\n    updateUserMetadata,\n    isUpdating,\n    error: updateError,\n  } = useProfileUpdate();\n\n  // Note: Loading state is now handled by loading.tsx file convention\n\n  // Error state\n  if (error) {\n    return (\n      <div className={styles.container}>\n        <div className={styles.header}>\n          <h1 className={styles.title}>Profile</h1>\n        </div>\n        <div className={styles.errorState}>\n          <p>Error loading profile: {error.message}</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Note: Route protection is handled by middleware - authenticated users only\n  if (!user) {\n    return null; // This shouldn't happen due to middleware, but TypeScript safety\n  }\n\n  // Default stats if none available\n  const defaultStats = {\n    user_id: user.id,\n    total_workouts: 0,\n    days_active: 0,\n    hours_trained: 0,\n    achievements_count: 0,\n    last_updated: new Date(),\n  };\n\n  const displayStats = stats || defaultStats;\n  const displayAchievements = achievements || [];\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.header}>\n        <h1 className={styles.title}>Profile</h1>\n        {updateError && (\n          <div className={styles.errorMessage}>Error: {updateError}</div>\n        )}\n      </div>\n\n      <div className={styles.content}>\n        {/* Profile Information */}\n        <div className={styles.mainContent}>\n          <PersonalInfoCard\n            user={user}\n            onUpdateMetadata={updateUserMetadata}\n            isUpdating={isUpdating}\n          />\n\n          {/* Fitness Profile */}\n          {profile && <FitnessProfileCard profile={profile} />}\n        </div>\n\n        {/* Stats Sidebar */}\n        <div className={styles.sidebar}>\n          <ActivityStatsCard stats={displayStats} />\n          <AchievementsCard achievements={displayAchievements} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"names":[],"mappings":";;;;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;AAfA;;;;AAiBA,MAAM,UAAU;;IACd,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,UAAO,AAAD;IACvB,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,wJAAA,CAAA,iBAAc,AAAD;IAC7D,MAAM,EACJ,kBAAkB,EAClB,UAAU,EACV,OAAO,WAAW,EACnB,GAAG,CAAA,GAAA,0JAAA,CAAA,mBAAgB,AAAD;IAEnB,oEAAoE;IAEpE,cAAc;IACd,IAAI,OAAO;QACT,qBACE,qYAAC;YAAI,WAAW,oJAAA,CAAA,UAAM,CAAC,SAAS;;8BAC9B,qYAAC;oBAAI,WAAW,oJAAA,CAAA,UAAM,CAAC,MAAM;8BAC3B,cAAA,qYAAC;wBAAG,WAAW,oJAAA,CAAA,UAAM,CAAC,KAAK;kCAAE;;;;;;;;;;;8BAE/B,qYAAC;oBAAI,WAAW,oJAAA,CAAA,UAAM,CAAC,UAAU;8BAC/B,cAAA,qYAAC;;4BAAE;4BAAwB,MAAM,OAAO;;;;;;;;;;;;;;;;;;IAIhD;IAEA,6EAA6E;IAC7E,IAAI,CAAC,MAAM;QACT,OAAO,MAAM,iEAAiE;IAChF;IAEA,kCAAkC;IAClC,MAAM,eAAe;QACnB,SAAS,KAAK,EAAE;QAChB,gBAAgB;QAChB,aAAa;QACb,eAAe;QACf,oBAAoB;QACpB,cAAc,IAAI;IACpB;IAEA,MAAM,eAAe,SAAS;IAC9B,MAAM,sBAAsB,gBAAgB,EAAE;IAE9C,qBACE,qYAAC;QAAI,WAAW,oJAAA,CAAA,UAAM,CAAC,SAAS;;0BAC9B,qYAAC;gBAAI,WAAW,oJAAA,CAAA,UAAM,CAAC,MAAM;;kCAC3B,qYAAC;wBAAG,WAAW,oJAAA,CAAA,UAAM,CAAC,KAAK;kCAAE;;;;;;oBAC5B,6BACC,qYAAC;wBAAI,WAAW,oJAAA,CAAA,UAAM,CAAC,YAAY;;4BAAE;4BAAQ;;;;;;;;;;;;;0BAIjD,qYAAC;gBAAI,WAAW,oJAAA,CAAA,UAAM,CAAC,OAAO;;kCAE5B,qYAAC;wBAAI,WAAW,oJAAA,CAAA,UAAM,CAAC,WAAW;;0CAChC,qYAAC,oLAAA,CAAA,mBAAgB;gCACf,MAAM;gCACN,kBAAkB;gCAClB,YAAY;;;;;;4BAIb,yBAAW,qYAAC,wLAAA,CAAA,qBAAkB;gCAAC,SAAS;;;;;;;;;;;;kCAI3C,qYAAC;wBAAI,WAAW,oJAAA,CAAA,UAAM,CAAC,OAAO;;0CAC5B,qYAAC,sLAAA,CAAA,oBAAiB;gCAAC,OAAO;;;;;;0CAC1B,qYAAC,oLAAA,CAAA,mBAAgB;gCAAC,cAAc;;;;;;;;;;;;;;;;;;;;;;;;AAK1C;GAzEM;;QACa,qJAAA,CAAA,UAAO;QACwB,wJAAA,CAAA,iBAAc;QAK1D,0JAAA,CAAA,mBAAgB;;;KAPhB;uCA2ES","debugId":null}},
    {"offset": {"line": 2148, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/app/%28app%29/profile/page.tsx"],"sourcesContent":["'use client';\n\nimport Profile from '@/features/profile/Profile';\n\nconst ProfilePage = () => {\n  return <Profile />;\n};\n\nexport default ProfilePage;\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIA,MAAM,cAAc;IAClB,qBAAO,qYAAC,yIAAA,CAAA,UAAO;;;;;AACjB;KAFM;uCAIS","debugId":null}}]
}