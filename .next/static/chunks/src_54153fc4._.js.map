{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/components/ExercisesList/CategoryTabs.tsx"],"sourcesContent":["interface CategoryTabsProps {\n  activeCategory: string;\n  onCategoryChange: (category: string) => void;\n}\n\nexport const CategoryTabs = ({\n  activeCategory,\n  onCategoryChange,\n}: CategoryTabsProps) => {\n  const categories = [\n    'All Exercises',\n    'Strength',\n    'Cardio',\n    'Flexibility',\n    'Balance',\n    'Favorites',\n  ];\n\n  return (\n    <div className=\"border-b border-gray-200 mb-8\">\n      <div className=\"flex space-x-4 sm:space-x-8 overflow-x-auto pb-2\">\n        {categories.map(category => (\n          <button\n            key={category}\n            onClick={() => onCategoryChange(category)}\n            className={`py-2 px-1 border-b-2 transition-colors whitespace-nowrap ${\n              activeCategory === category\n                ? 'border-indigo-600 text-indigo-600 font-medium'\n                : 'border-transparent text-gray-500 hover:text-gray-700'\n            }`}\n          >\n            {category}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;;AAKO,MAAM,eAAe;QAAC,EAC3B,cAAc,EACd,gBAAgB,EACE;IAClB,MAAM,aAAa;QACjB;QACA;QACA;QACA;QACA;QACA;KACD;IAED,qBACE,qYAAC;QAAI,WAAU;kBACb,cAAA,qYAAC;YAAI,WAAU;sBACZ,WAAW,GAAG,CAAC,CAAA,yBACd,qYAAC;oBAEC,SAAS,IAAM,iBAAiB;oBAChC,WAAW,AAAC,4DAIX,OAHC,mBAAmB,WACf,kDACA;8BAGL;mBARI;;;;;;;;;;;;;;;AAcjB;KAhCa","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/context/ExerciseContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\n\nimport { FilterState } from '../types';\n\ninterface ExerciseContextType {\n  searchTerm: string;\n  handleSearchChange: (value: string) => void;\n  clearSearch: () => void;\n  filters: FilterState;\n  handleFilterChange: (type: keyof FilterState, value: string) => void;\n  clearFilters: () => void;\n  getActiveFilterCount: () => number;\n}\n\nconst ExerciseContext = createContext<ExerciseContextType | undefined>(\n  undefined\n);\n\ninterface ExerciseProviderProps {\n  children: ReactNode;\n}\n\nexport const ExerciseProvider = ({ children }: ExerciseProviderProps) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filters, setFilters] = useState<FilterState>({\n    difficulties: [],\n    muscleGroups: [],\n    equipment: [],\n  });\n\n  const handleSearchChange = (value: string) => {\n    setSearchTerm(value);\n  };\n\n  const clearSearch = () => {\n    setSearchTerm('');\n  };\n\n  const handleFilterChange = (type: keyof FilterState, value: string) => {\n    setFilters(prev => {\n      const currentArray = prev[type] as any[];\n      const isIncluded = currentArray.includes(value);\n\n      return {\n        ...prev,\n        [type]: isIncluded\n          ? currentArray.filter(item => item !== value)\n          : [...currentArray, value],\n      };\n    });\n  };\n\n  const clearFilters = () => {\n    setFilters({\n      difficulties: [],\n      muscleGroups: [],\n      equipment: [],\n    });\n  };\n\n  const getActiveFilterCount = () => {\n    return (\n      filters.difficulties.length +\n      filters.muscleGroups.length +\n      filters.equipment.length\n    );\n  };\n\n  const value: ExerciseContextType = {\n    searchTerm,\n    handleSearchChange,\n    clearSearch,\n    filters,\n    handleFilterChange,\n    clearFilters,\n    getActiveFilterCount,\n  };\n\n  return (\n    <ExerciseContext.Provider value={value}>\n      {children}\n    </ExerciseContext.Provider>\n  );\n};\n\nexport function useExerciseContext() {\n  const context = useContext(ExerciseContext);\n  if (context === undefined) {\n    throw new Error(\n      'useExerciseContext must be used within an ExerciseProvider'\n    );\n  }\n  return context;\n}\n"],"names":[],"mappings":";;;;;AAAA;;;;AAcA,MAAM,gCAAkB,CAAA,GAAA,qWAAA,CAAA,gBAAa,AAAD,EAClC;AAOK,MAAM,mBAAmB;QAAC,EAAE,QAAQ,EAAyB;;IAClE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qWAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qWAAA,CAAA,WAAQ,AAAD,EAAe;QAClD,cAAc,EAAE;QAChB,cAAc,EAAE;QAChB,WAAW,EAAE;IACf;IAEA,MAAM,qBAAqB,CAAC;QAC1B,cAAc;IAChB;IAEA,MAAM,cAAc;QAClB,cAAc;IAChB;IAEA,MAAM,qBAAqB,CAAC,MAAyB;QACnD,WAAW,CAAA;YACT,MAAM,eAAe,IAAI,CAAC,KAAK;YAC/B,MAAM,aAAa,aAAa,QAAQ,CAAC;YAEzC,OAAO;gBACL,GAAG,IAAI;gBACP,CAAC,KAAK,EAAE,aACJ,aAAa,MAAM,CAAC,CAAA,OAAQ,SAAS,SACrC;uBAAI;oBAAc;iBAAM;YAC9B;QACF;IACF;IAEA,MAAM,eAAe;QACnB,WAAW;YACT,cAAc,EAAE;YAChB,cAAc,EAAE;YAChB,WAAW,EAAE;QACf;IACF;IAEA,MAAM,uBAAuB;QAC3B,OACE,QAAQ,YAAY,CAAC,MAAM,GAC3B,QAAQ,YAAY,CAAC,MAAM,GAC3B,QAAQ,SAAS,CAAC,MAAM;IAE5B;IAEA,MAAM,QAA6B;QACjC;QACA;QACA;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE,qYAAC,gBAAgB,QAAQ;QAAC,OAAO;kBAC9B;;;;;;AAGP;GA7Da;KAAA;AA+DN,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,qWAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MACR;IAEJ;IACA,OAAO;AACT;IARgB","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/hooks/useExerciseFilters.ts"],"sourcesContent":["import { useExerciseContext } from '../context/ExerciseContext';\n\nexport function useExerciseFilters() {\n  const { filters, handleFilterChange, clearFilters, getActiveFilterCount } =\n    useExerciseContext();\n\n  return {\n    filters,\n    handleFilterChange,\n    clearFilters,\n    getActiveFilterCount,\n  };\n}\n"],"names":[],"mappings":";;;AAAA;;;AAEO,SAAS;;IACd,MAAM,EAAE,OAAO,EAAE,kBAAkB,EAAE,YAAY,EAAE,oBAAoB,EAAE,GACvE,CAAA,GAAA,8JAAA,CAAA,qBAAkB,AAAD;IAEnB,OAAO;QACL;QACA;QACA;QACA;IACF;AACF;GAVgB;;QAEZ,8JAAA,CAAA,qBAAkB","debugId":null}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/hooks/useExercises.ts"],"sourcesContent":["import useSWR from 'swr';\n\nimport type { Exercise } from '../types';\nimport type {\n  Category,\n  Difficulty,\n  Equipment,\n  MuscleGroup,\n} from '../types/constants';\n\n// Fetcher function for SWR\nconst fetcher = async (url: string) => {\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error('Failed to fetch data');\n  }\n  return response.json();\n};\n\n// Hook to get all exercises\nexport function useExercises() {\n  const { data, error, isLoading, mutate } = useSWR<{ exercises: Exercise[] }>(\n    '/api/exercises',\n    fetcher\n  );\n\n  return {\n    exercises: data?.exercises || [],\n    isLoading,\n    error,\n    mutate,\n  };\n}\n\n// Hook to get a single exercise by ID\nexport function useExercise(exerciseId: string) {\n  const { data, error, isLoading, mutate } = useSWR<{ exercise: Exercise }>(\n    exerciseId ? `/api/exercises/${exerciseId}` : null,\n    fetcher\n  );\n\n  return {\n    exercise: data?.exercise,\n    isLoading,\n    error,\n    mutate,\n  };\n}\n\n// Hook to search exercises with filters\nexport function useExerciseSearch(params: {\n  searchTerm?: string;\n  category?: Category;\n  difficulties?: Difficulty[];\n  equipment?: Equipment[];\n  muscleGroups?: MuscleGroup[];\n}) {\n  const searchParams = new URLSearchParams();\n\n  if (params.searchTerm) searchParams.append('searchTerm', params.searchTerm);\n  if (params.category) searchParams.append('category', params.category);\n\n  // Handle multiple values for each filter type\n  if (params.difficulties) {\n    params.difficulties.forEach(difficulty => {\n      searchParams.append('difficulty', difficulty);\n    });\n  }\n  if (params.equipment) {\n    params.equipment.forEach(eq => {\n      searchParams.append('equipment', eq);\n    });\n  }\n  if (params.muscleGroups) {\n    params.muscleGroups.forEach(mg => {\n      searchParams.append('muscleGroup', mg);\n    });\n  }\n\n  const { data, error, isLoading, mutate } = useSWR<{ exercises: Exercise[] }>(\n    searchParams.toString()\n      ? `/api/exercises/search?${searchParams.toString()}`\n      : null,\n    fetcher\n  );\n\n  return {\n    exercises: data?.exercises || [],\n    isLoading,\n    error,\n    mutate,\n  };\n}\n\n// Hook to get user's favorite exercises\nexport function useUserFavorites(userId?: string) {\n  const { data, error, isLoading, mutate } = useSWR<{ exercises: Exercise[] }>(\n    userId ? `/api/exercises/favorites?userId=${userId}` : null,\n    fetcher\n  );\n\n  return {\n    favorites: data?.exercises || [],\n    isLoading,\n    error,\n    mutate,\n  };\n}\n\n// Hook to manage favorites (add/remove)\nexport function useFavoriteManagement() {\n  const addToFavorites = async (userId: string, exerciseId: string) => {\n    const response = await fetch('/api/exercises/favorites', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ userId, exerciseId }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to add to favorites');\n    }\n\n    return response.json();\n  };\n\n  const removeFromFavorites = async (userId: string, exerciseId: string) => {\n    const response = await fetch(\n      `/api/exercises/favorites?userId=${userId}&exerciseId=${exerciseId}`,\n      {\n        method: 'DELETE',\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error('Failed to remove from favorites');\n    }\n\n    return response.json();\n  };\n\n  return {\n    addToFavorites,\n    removeFromFavorites,\n  };\n}\n"],"names":[],"mappings":";;;;;;;AAAA;;;AAUA,2BAA2B;AAC3B,MAAM,UAAU,OAAO;IACrB,MAAM,WAAW,MAAM,MAAM;IAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO,SAAS,IAAI;AACtB;AAGO,SAAS;;IACd,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,uOAAA,CAAA,UAAM,AAAD,EAC9C,kBACA;IAGF,OAAO;QACL,WAAW,CAAA,iBAAA,2BAAA,KAAM,SAAS,KAAI,EAAE;QAChC;QACA;QACA;IACF;AACF;GAZgB;;QAC6B,uOAAA,CAAA,UAAM;;;AAc5C,SAAS,YAAY,UAAkB;;IAC5C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,uOAAA,CAAA,UAAM,AAAD,EAC9C,aAAa,AAAC,kBAA4B,OAAX,cAAe,MAC9C;IAGF,OAAO;QACL,QAAQ,EAAE,iBAAA,2BAAA,KAAM,QAAQ;QACxB;QACA;QACA;IACF;AACF;IAZgB;;QAC6B,uOAAA,CAAA,UAAM;;;AAc5C,SAAS,kBAAkB,MAMjC;;IACC,MAAM,eAAe,IAAI;IAEzB,IAAI,OAAO,UAAU,EAAE,aAAa,MAAM,CAAC,cAAc,OAAO,UAAU;IAC1E,IAAI,OAAO,QAAQ,EAAE,aAAa,MAAM,CAAC,YAAY,OAAO,QAAQ;IAEpE,8CAA8C;IAC9C,IAAI,OAAO,YAAY,EAAE;QACvB,OAAO,YAAY,CAAC,OAAO,CAAC,CAAA;YAC1B,aAAa,MAAM,CAAC,cAAc;QACpC;IACF;IACA,IAAI,OAAO,SAAS,EAAE;QACpB,OAAO,SAAS,CAAC,OAAO,CAAC,CAAA;YACvB,aAAa,MAAM,CAAC,aAAa;QACnC;IACF;IACA,IAAI,OAAO,YAAY,EAAE;QACvB,OAAO,YAAY,CAAC,OAAO,CAAC,CAAA;YAC1B,aAAa,MAAM,CAAC,eAAe;QACrC;IACF;IAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,uOAAA,CAAA,UAAM,AAAD,EAC9C,aAAa,QAAQ,KACjB,AAAC,yBAAgD,OAAxB,aAAa,QAAQ,MAC9C,MACJ;IAGF,OAAO;QACL,WAAW,CAAA,iBAAA,2BAAA,KAAM,SAAS,KAAI,EAAE;QAChC;QACA;QACA;IACF;AACF;IA1CgB;;QA6B6B,uOAAA,CAAA,UAAM;;;AAgB5C,SAAS,iBAAiB,MAAe;;IAC9C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,uOAAA,CAAA,UAAM,AAAD,EAC9C,SAAS,AAAC,mCAAyC,OAAP,UAAW,MACvD;IAGF,OAAO;QACL,WAAW,CAAA,iBAAA,2BAAA,KAAM,SAAS,KAAI,EAAE;QAChC;QACA;QACA;IACF;AACF;IAZgB;;QAC6B,uOAAA,CAAA,UAAM;;;AAc5C,SAAS;IACd,MAAM,iBAAiB,OAAO,QAAgB;QAC5C,MAAM,WAAW,MAAM,MAAM,4BAA4B;YACvD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAQ;YAAW;QAC5C;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,sBAAsB,OAAO,QAAgB;QACjD,MAAM,WAAW,MAAM,MACrB,AAAC,mCAAuD,OAArB,QAAO,gBAAyB,OAAX,aACxD;YACE,QAAQ;QACV;QAGF,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,SAAS,IAAI;IACtB;IAEA,OAAO;QACL;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/hooks/useExerciseSearch.ts"],"sourcesContent":["import { useExerciseContext } from '../context/ExerciseContext';\n\nexport function useExerciseSearch() {\n  const { searchTerm, handleSearchChange, clearSearch } = useExerciseContext();\n\n  return {\n    searchTerm,\n    handleSearchChange,\n    clearSearch,\n  };\n}\n"],"names":[],"mappings":";;;AAAA;;;AAEO,SAAS;;IACd,MAAM,EAAE,UAAU,EAAE,kBAAkB,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,qBAAkB,AAAD;IAEzE,OAAO;QACL;QACA;QACA;IACF;AACF;GARgB;;QAC0C,8JAAA,CAAA,qBAAkB","debugId":null}},
    {"offset": {"line": 342, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/utils/filterUtils.ts"],"sourcesContent":["import { Exercise, FilterState } from '../types';\n\nexport const filterExercises = (\n  exercises: Exercise[],\n  searchTerm: string,\n  selectedCategory: string,\n  filters: FilterState\n): Exercise[] => {\n  return exercises.filter(exercise => {\n    // Get the main variant for filtering\n    const mainVariant = exercise.variants.find(\n      v => v.id === exercise.mainVariantId\n    );\n    if (!mainVariant) return false;\n\n    // Search filter\n    const matchesSearch =\n      exercise.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      mainVariant.muscleGroups.some(muscle =>\n        muscle.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n\n    // Category filter\n    const matchesCategory =\n      selectedCategory === 'All' || exercise.category === selectedCategory;\n\n    // Advanced filters\n    const matchesDifficulty =\n      filters.difficulties.length === 0 ||\n      filters.difficulties.includes(mainVariant.difficulty);\n\n    const matchesMuscleGroup =\n      filters.muscleGroups.length === 0 ||\n      filters.muscleGroups.some(group =>\n        mainVariant.muscleGroups.includes(group)\n      );\n\n    const matchesEquipment =\n      filters.equipment.length === 0 ||\n      (mainVariant.equipment &&\n        filters.equipment.some(eq => mainVariant.equipment?.includes(eq)));\n\n    return (\n      matchesSearch &&\n      matchesCategory &&\n      matchesDifficulty &&\n      matchesMuscleGroup &&\n      matchesEquipment\n    );\n  });\n};\n\nexport const getActiveFilterCount = (filters: FilterState): number => {\n  return (\n    filters.difficulties.length +\n    filters.muscleGroups.length +\n    filters.equipment.length\n  );\n};\n"],"names":[],"mappings":";;;;AAEO,MAAM,kBAAkB,CAC7B,WACA,YACA,kBACA;IAEA,OAAO,UAAU,MAAM,CAAC,CAAA;QACtB,qCAAqC;QACrC,MAAM,cAAc,SAAS,QAAQ,CAAC,IAAI,CACxC,CAAA,IAAK,EAAE,EAAE,KAAK,SAAS,aAAa;QAEtC,IAAI,CAAC,aAAa,OAAO;QAEzB,gBAAgB;QAChB,MAAM,gBACJ,SAAS,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW,OAC3D,YAAY,YAAY,CAAC,IAAI,CAAC,CAAA,SAC5B,OAAO,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW;QAGxD,kBAAkB;QAClB,MAAM,kBACJ,qBAAqB,SAAS,SAAS,QAAQ,KAAK;QAEtD,mBAAmB;QACnB,MAAM,oBACJ,QAAQ,YAAY,CAAC,MAAM,KAAK,KAChC,QAAQ,YAAY,CAAC,QAAQ,CAAC,YAAY,UAAU;QAEtD,MAAM,qBACJ,QAAQ,YAAY,CAAC,MAAM,KAAK,KAChC,QAAQ,YAAY,CAAC,IAAI,CAAC,CAAA,QACxB,YAAY,YAAY,CAAC,QAAQ,CAAC;QAGtC,MAAM,mBACJ,QAAQ,SAAS,CAAC,MAAM,KAAK,KAC5B,YAAY,SAAS,IACpB,QAAQ,SAAS,CAAC,IAAI,CAAC,CAAA;gBAAM;oBAAA,yBAAA,YAAY,SAAS,cAArB,6CAAA,uBAAuB,QAAQ,CAAC;;QAEjE,OACE,iBACA,mBACA,qBACA,sBACA;IAEJ;AACF;AAEO,MAAM,uBAAuB,CAAC;IACnC,OACE,QAAQ,YAAY,CAAC,MAAM,GAC3B,QAAQ,YAAY,CAAC,MAAM,GAC3B,QAAQ,SAAS,CAAC,MAAM;AAE5B","debugId":null}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/types/constants.ts"],"sourcesContent":["/**\n * Exercise constants and enums\n */\n\n// Exercise categories\nexport const CATEGORY = {\n  STRENGTH: 'Strength',\n  CARDIO: 'Cardio',\n  FLEXIBILITY: 'Flexibility',\n  BALANCE: 'Balance',\n} as const;\n\nexport type Category = (typeof CATEGORY)[keyof typeof CATEGORY];\n\n// Difficulty levels\nexport const DIFFICULTY = {\n  BEGINNER: 'Beginner',\n  INTERMEDIATE: 'Intermediate',\n  ADVANCED: 'Advanced',\n  UNKNOWN: 'Unknown',\n} as const;\n\nexport type Difficulty = (typeof DIFFICULTY)[keyof typeof DIFFICULTY];\n\n// Equipment types\nexport const EQUIPMENT = {\n  BARBELL: 'Barbell',\n  DUMBBELL: 'Dumbbell',\n  BODYWEIGHT: 'Bodyweight',\n  MACHINE: 'Machine',\n  RESISTANCE_BAND: 'Resistance Band',\n  KETTLEBELL: 'Kettlebell',\n  CABLE: 'Cable',\n  BENCH: 'Bench',\n  INCLINE_BENCH: 'Incline Bench',\n  DECLINE_BENCH: 'Decline Bench',\n  PULLUP_BAR: 'Pull-up Bar',\n  SQUAT_RACK: 'Squat Rack',\n  STEP: 'Step',\n} as const;\n\nexport type Equipment = (typeof EQUIPMENT)[keyof typeof EQUIPMENT];\n\n// Muscle groups\nexport const MUSCLE_GROUP = {\n  CHEST: 'Chest',\n  BACK: 'Back',\n  LEGS: 'Legs',\n  ARMS: 'Arms',\n  SHOULDERS: 'Shoulders',\n  CORE: 'Core',\n  GLUTES: 'Glutes',\n  BICEPS: 'Biceps',\n  TRICEPS: 'Triceps',\n  CARDIO: 'Cardio',\n  FULL_BODY: 'Full Body',\n  UPPER_CHEST: 'Upper Chest',\n  LOWER_CHEST: 'Lower Chest',\n  FRONT_DELTS: 'Front Delts',\n  OBLIQUES: 'Obliques',\n  QUADRICEPS: 'Quadriceps',\n  HAMSTRINGS: 'Hamstrings',\n} as const;\n\nexport type MuscleGroup = (typeof MUSCLE_GROUP)[keyof typeof MUSCLE_GROUP];\n"],"names":[],"mappings":"AAAA;;CAEC,GAED,sBAAsB;;;;;;;AACf,MAAM,WAAW;IACtB,UAAU;IACV,QAAQ;IACR,aAAa;IACb,SAAS;AACX;AAKO,MAAM,aAAa;IACxB,UAAU;IACV,cAAc;IACd,UAAU;IACV,SAAS;AACX;AAKO,MAAM,YAAY;IACvB,SAAS;IACT,UAAU;IACV,YAAY;IACZ,SAAS;IACT,iBAAiB;IACjB,YAAY;IACZ,OAAO;IACP,OAAO;IACP,eAAe;IACf,eAAe;IACf,YAAY;IACZ,YAAY;IACZ,MAAM;AACR;AAKO,MAAM,eAAe;IAC1B,OAAO;IACP,MAAM;IACN,MAAM;IACN,MAAM;IACN,WAAW;IACX,MAAM;IACN,QAAQ;IACR,QAAQ;IACR,SAAS;IACT,QAAQ;IACR,WAAW;IACX,aAAa;IACb,aAAa;IACb,aAAa;IACb,UAAU;IACV,YAAY;IACZ,YAAY;AACd","debugId":null}},
    {"offset": {"line": 441, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/types/ids.ts"],"sourcesContent":["/**\n * Branded ID types for type safety\n */\n\n// Exercise-related IDs\nexport type ExerciseId = string & { readonly __brand: 'ExerciseId' };\nexport type ExerciseVariantId = string & {\n  readonly __brand: 'ExerciseVariantId';\n};\nexport type RoutineId = string & { readonly __brand: 'RoutineId' };\n\n// Utility functions to create branded IDs\nexport const createExerciseId = (id: string): ExerciseId => id as ExerciseId;\nexport const createExerciseVariantId = (id: string): ExerciseVariantId =>\n  id as ExerciseVariantId;\nexport const createRoutineId = (id: string): RoutineId => id as RoutineId;\n\n// Type guards\nexport const isExerciseId = (id: string): id is ExerciseId => {\n  return typeof id === 'string' && id.length > 0;\n};\n\nexport const isExerciseVariantId = (id: string): id is ExerciseVariantId => {\n  return typeof id === 'string' && id.length > 0;\n};\n\nexport const isRoutineId = (id: string): id is RoutineId => {\n  return typeof id === 'string' && id.length > 0;\n};\n"],"names":[],"mappings":"AAAA;;CAEC,GAED,uBAAuB;;;;;;;;;AAQhB,MAAM,mBAAmB,CAAC,KAA2B;AACrD,MAAM,0BAA0B,CAAC,KACtC;AACK,MAAM,kBAAkB,CAAC,KAA0B;AAGnD,MAAM,eAAe,CAAC;IAC3B,OAAO,OAAO,OAAO,YAAY,GAAG,MAAM,GAAG;AAC/C;AAEO,MAAM,sBAAsB,CAAC;IAClC,OAAO,OAAO,OAAO,YAAY,GAAG,MAAM,GAAG;AAC/C;AAEO,MAAM,cAAc,CAAC;IAC1B,OAAO,OAAO,OAAO,YAAY,GAAG,MAAM,GAAG;AAC/C","debugId":null}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/types/exercise.ts"],"sourcesContent":["/**\n * Main exercise interfaces\n */\n\nimport type { Category, Difficulty, Equipment, MuscleGroup } from './constants';\nimport type { ExerciseId, ExerciseVariantId } from './ids';\n\n// Instruction step interface\nexport interface InstructionStep {\n  title: string;\n  description: string;\n}\n\n// Exercise tips interface\nexport interface ExerciseTips {\n  proTips: string[];\n  commonMistakes: string[];\n  safetyNotes?: string[];\n}\n\n// Media interface for exercise variants\nexport interface ExerciseMedia {\n  images?: string[];\n  videos?: string[];\n  featuredImage?: string;\n  featuredVideo?: string;\n}\n\n// Exercise variant interface - contains all detailed data\nexport interface ExerciseVariant {\n  // Core Identity\n  id: ExerciseVariantId;\n  name: string;\n  alternativeNames?: string[];\n  description: string;\n  focus: string;\n\n  // Exercise Characteristics\n  difficulty: Difficulty;\n  equipment: Equipment[];\n  muscleGroups: MuscleGroup[];\n  secondaryMuscles?: MuscleGroup[];\n  isUnilateral?: boolean;\n\n  // Instructions & Guidance\n  instructions: string[];\n  steps: InstructionStep[];\n  tips?: ExerciseTips;\n\n  // Media Assets\n  media?: ExerciseMedia;\n\n  // Additional Data\n  prerequisites?: ExerciseVariantId[];\n\n  // Database fields\n  created_at?: Date;\n  updated_at?: Date;\n}\n\n// Main Exercise interface - wrapper for variants\nexport interface Exercise {\n  // Core Identity\n  id: ExerciseId;\n  name: string;\n  alternativeNames?: string[];\n  category: Category;\n  description: string;\n\n  // Variants Management\n  variants: ExerciseVariant[];\n  mainVariantId: ExerciseVariantId; // ID of the main/default variant\n\n  // Display Properties\n  icon: string;\n  iconColor: string;\n\n  // Status flags\n  isFavorite: boolean;\n  isPopular?: boolean;\n  isNew?: boolean;\n\n  // Ratings\n  rating?: number;\n\n  // Summary Information (aggregated from variants)\n  summary?: {\n    difficultyRange: {\n      min: Difficulty;\n      max: Difficulty;\n    };\n    equipmentOptions: Equipment[];\n    primaryMuscleGroups: MuscleGroup[];\n  };\n\n  // Search & Categorization\n  tags?: string[];\n\n  // Exercise Relationships\n  relatedExercises?: ExerciseId[];\n\n  // Database fields\n  created_at?: Date;\n  updated_at?: Date;\n}\n\n// Extended exercise data for detailed views (deprecated - use ExerciseVariant instead)\nexport type ExerciseData = Exercise & {\n  totalRatings: number;\n  type: string;\n  mechanics: string;\n  primaryMuscles: MuscleGroup[];\n\n  // Detailed instructions\n  steps: InstructionStep[];\n  proTips: string[];\n  commonMistakes: string[];\n};\n\n// Routine interface\nexport interface Routine {\n  id: string;\n  name: string;\n  schedule: string;\n  exercises: number;\n  isSelected: boolean;\n}\n"],"names":[],"mappings":"AAAA;;CAEC","debugId":null}},
    {"offset": {"line": 486, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/types/api.ts"],"sourcesContent":["/**\n * API types for exercise services\n */\n\nimport type { Category, Difficulty, Equipment, MuscleGroup } from './constants';\nimport type { Exercise, ExerciseVariant } from './exercise';\nimport type { ExerciseId, ExerciseVariantId } from './ids';\n\n// Search and filter parameters\nexport interface ExerciseSearchParams {\n  query?: string;\n  category?: Category[];\n  equipment?: Equipment[];\n  targetMuscles?: MuscleGroup[];\n  difficulty?: Difficulty[];\n  tags?: string[];\n  featured?: boolean;\n}\n\n// Pagination parameters\nexport interface PaginationParams {\n  page?: number;\n  limit?: number;\n  offset?: number;\n}\n\n// Sort parameters\nexport interface ExerciseSortParams {\n  sortBy?: 'name' | 'difficulty' | 'featured' | 'popularity' | 'created_at';\n  sortOrder?: 'asc' | 'desc';\n}\n\n// Combined query parameters\nexport interface ExerciseQueryParams\n  extends ExerciseSearchParams,\n    PaginationParams,\n    ExerciseSortParams {}\n\n// API response types\nexport interface ExerciseListResponse {\n  exercises: Exercise[];\n  total: number;\n  page: number;\n  limit: number;\n  hasNext: boolean;\n  hasPrevious: boolean;\n}\n\nexport interface ExerciseResponse {\n  exercise: Exercise;\n}\n\nexport interface ExerciseVariantResponse {\n  variant: ExerciseVariant;\n  exercise: Pick<Exercise, 'id' | 'name' | 'category'>;\n}\n\n// Error response\nexport interface ExerciseApiError {\n  code: string;\n  message: string;\n  details?: Record<string, unknown>;\n}\n\n// Request types for creating/updating exercises\nexport interface CreateExerciseRequest {\n  exercise: Omit<Exercise, 'id' | 'created_at' | 'updated_at'>;\n}\n\nexport interface UpdateExerciseRequest {\n  exerciseId: ExerciseId;\n  updates: Partial<Omit<Exercise, 'id'>>;\n}\n\nexport interface CreateVariantRequest {\n  exerciseId: ExerciseId;\n  variant: Omit<ExerciseVariant, 'id'>;\n}\n\nexport interface UpdateVariantRequest {\n  variantId: ExerciseVariantId;\n  updates: Partial<Omit<ExerciseVariant, 'id'>>;\n}\n"],"names":[],"mappings":"AAAA;;CAEC","debugId":null}},
    {"offset": {"line": 499, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/types/utils.ts"],"sourcesContent":["/**\n * Utility types for exercise operations\n */\n\nimport type { Exercise, ExerciseVariant } from './exercise';\n\n// Partial types for updates\nexport type ExerciseUpdate = Partial<Omit<Exercise, 'id' | 'variants'>>;\nexport type ExerciseVariantUpdate = Partial<Omit<ExerciseVariant, 'id'>>;\n\n// Readonly types for immutable data\nexport type ReadonlyExercise = Readonly<Exercise>;\nexport type ReadonlyExerciseVariant = Readonly<ExerciseVariant>;\n\n// Exercise summary (minimal data for lists)\nexport type ExerciseSummary = Pick<\n  Exercise,\n  | 'id'\n  | 'name'\n  | 'category'\n  | 'description'\n  | 'isPopular'\n  | 'isNew'\n  | 'rating'\n  | 'icon'\n  | 'iconColor'\n>;\n\n// Variant summary (minimal data for variant lists)\nexport type ExerciseVariantSummary = Pick<\n  ExerciseVariant,\n  'id' | 'name' | 'description' | 'difficulty' | 'equipment' | 'muscleGroups'\n>;\n\n// Exercise with selected variant (for display)\nexport interface ExerciseWithVariant {\n  exercise: Exercise;\n  selectedVariant: ExerciseVariant;\n}\n\n// Exercise creation data (without generated fields)\nexport type ExerciseCreateData = Omit<\n  Exercise,\n  'id' | 'created_at' | 'updated_at'\n>;\nexport type ExerciseVariantCreateData = Omit<ExerciseVariant, 'id'>;\n\n// Exercise search result\nexport interface ExerciseSearchResult {\n  exercise: ExerciseSummary;\n  matchedVariants: ExerciseVariantSummary[];\n  relevanceScore: number;\n}\n\n// Exercise validation result\nexport interface ExerciseValidationResult {\n  isValid: boolean;\n  errors: Array<{\n    field: string;\n    message: string;\n  }>;\n  warnings: Array<{\n    field: string;\n    message: string;\n  }>;\n}\n\n// Type for exercise filtering functions\nexport type ExerciseFilter = (exercise: Exercise) => boolean;\nexport type ExerciseVariantFilter = (variant: ExerciseVariant) => boolean;\n\n// Type for exercise sorting functions\nexport type ExerciseSorter = (a: Exercise, b: Exercise) => number;\nexport type ExerciseVariantSorter = (\n  a: ExerciseVariant,\n  b: ExerciseVariant\n) => number;\n"],"names":[],"mappings":"AAAA;;CAEC","debugId":null}},
    {"offset": {"line": 512, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/types/ui.ts"],"sourcesContent":["/**\n * UI-specific types for exercise components\n */\n\nimport type { Difficulty, Equipment, MuscleGroup } from './constants';\nimport type { Exercise, ExerciseVariant } from './exercise';\n\n// Filter state for exercise lists\nexport interface FilterState {\n  difficulties: Difficulty[];\n  muscleGroups: MuscleGroup[];\n  equipment: Equipment[];\n}\n\n// Exercise selection modal props\nexport interface ExerciseSelectionModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSelectExercise: (exercise: Exercise, variant?: ExerciseVariant) => void;\n}\n\n// Exercise card props\nexport interface ExerciseCardProps {\n  exercise: Exercise;\n  variant?: ExerciseVariant;\n  onSelect?: (exercise: Exercise, variant?: ExerciseVariant) => void;\n  onFavorite?: (exerciseId: string) => void;\n  showVariantSelector?: boolean;\n}\n\n// Exercise list props\nexport interface ExerciseListProps {\n  exercises: Exercise[];\n  onExerciseSelect: (exercise: Exercise, variant?: ExerciseVariant) => void;\n  filters?: FilterState;\n  loading?: boolean;\n}\n\n// Search and filter props\nexport interface SearchAndFiltersProps {\n  onSearch: (query: string) => void;\n  onFilterChange: (filters: FilterState) => void;\n  filters: FilterState;\n  searchQuery: string;\n}\n"],"names":[],"mappings":"AAAA;;CAEC","debugId":null}},
    {"offset": {"line": 525, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/types/data.ts"],"sourcesContent":["/**\n * Exercise data constants\n */\n\nimport { CATEGORY, DIFFICULTY, EQUIPMENT, MUSCLE_GROUP } from './constants';\n\n// Export the arrays for backward compatibility\nexport const difficulties = Object.values(DIFFICULTY);\nexport const equipment = Object.values(EQUIPMENT);\nexport const muscleGroups = Object.values(MUSCLE_GROUP);\nexport const exerciseCategories = Object.values(CATEGORY);\n\n// Export the types for backward compatibility (using different names to avoid conflicts)\nexport type DifficultyType = (typeof DIFFICULTY)[keyof typeof DIFFICULTY];\nexport type EquipmentType = (typeof EQUIPMENT)[keyof typeof EQUIPMENT];\nexport type MuscleGroupType = (typeof MUSCLE_GROUP)[keyof typeof MUSCLE_GROUP];\nexport type ExerciseCategoryType = (typeof CATEGORY)[keyof typeof CATEGORY];\n"],"names":[],"mappings":"AAAA;;CAEC;;;;;;AAED;;AAGO,MAAM,eAAe,OAAO,MAAM,CAAC,qJAAA,CAAA,aAAU;AAC7C,MAAM,YAAY,OAAO,MAAM,CAAC,qJAAA,CAAA,YAAS;AACzC,MAAM,eAAe,OAAO,MAAM,CAAC,qJAAA,CAAA,eAAY;AAC/C,MAAM,qBAAqB,OAAO,MAAM,CAAC,qJAAA,CAAA,WAAQ","debugId":null}},
    {"offset": {"line": 548, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/types/mockData.ts"],"sourcesContent":["import { CATEGORY, DIFFICULTY, EQUIPMENT, MUSCLE_GROUP } from './constants';\nimport { Exercise, ExerciseVariant, Routine } from './exercise';\nimport { createExerciseId, createExerciseVariantId } from './ids';\n\n// Mock exercise variants\nconst benchPressVariants: ExerciseVariant[] = [\n  {\n    id: createExerciseVariantId('bench-press-basic'),\n    name: 'Bench Press',\n    description:\n      'A fundamental upper body exercise targeting the chest, triceps, and shoulders.',\n    focus: 'Overall Chest',\n    difficulty: DIFFICULTY.INTERMEDIATE,\n    equipment: [EQUIPMENT.BARBELL, EQUIPMENT.BENCH],\n    muscleGroups: [\n      MUSCLE_GROUP.CHEST,\n      MUSCLE_GROUP.TRICEPS,\n      MUSCLE_GROUP.SHOULDERS,\n    ],\n    instructions: [\n      'Lie flat on the bench with feet planted on the ground',\n      'Grip the barbell with hands slightly wider than shoulder-width',\n      'Lower the bar to your chest with control',\n      'Press the bar back up to starting position',\n    ],\n    steps: [\n      {\n        title: 'Starting Position',\n        description:\n          'Lie flat on the bench with your feet planted firmly on the floor. Your eyes should be directly under the barbell.',\n      },\n      {\n        title: 'Grip',\n        description:\n          'Grip the barbell with hands slightly wider than shoulder-width apart. Wrap your thumbs around the bar for safety.',\n      },\n      {\n        title: 'Lowering Phase',\n        description:\n          'Lower the bar slowly and under control to your mid-chest. Keep your elbows at approximately a 45-75 degree angle.',\n      },\n      {\n        title: 'Pressing Phase',\n        description:\n          'Push the bar back up to the starting position by extending your arms. Focus on pushing through your chest muscles.',\n      },\n      {\n        title: 'Breathing',\n        description:\n          'Inhale during the lowering phase and exhale during the pressing phase.',\n      },\n    ],\n    tips: {\n      proTips: [\n        'Keep your wrists straight and directly above your elbows.',\n        'Maintain a slight arch in your lower back, but keep your butt on the bench.',\n        'Drive through your feet for stability and added power.',\n        'Keep your shoulder blades retracted and \"tucked\" throughout the movement.',\n        'Focus on pushing yourself away from the bar, rather than pushing the bar away from you.',\n      ],\n      commonMistakes: [\n        'Bouncing the bar off your chest, which can lead to injury.',\n        'Lifting your butt off the bench, which reduces stability.',\n        'Flaring your elbows out too wide, which can strain your shoulders.',\n        'Not lowering the bar to chest level, which reduces the effectiveness.',\n        'Using too much weight and sacrificing proper form.',\n      ],\n    },\n    media: {\n      images: ['/exercise-images/bench-press.jpg'],\n      videos: ['/videos/bench-press.mp4'],\n      featuredImage: '/exercise-images/bench-press.jpg',\n      featuredVideo: '/videos/bench-press.mp4',\n    },\n  },\n  {\n    id: createExerciseVariantId('incline-bench'),\n    name: 'Incline Bench Press',\n    description: 'Targets upper chest more than flat bench press.',\n    focus: 'Upper Chest Focus',\n    difficulty: DIFFICULTY.INTERMEDIATE,\n    equipment: [EQUIPMENT.BARBELL, EQUIPMENT.INCLINE_BENCH],\n    muscleGroups: [\n      MUSCLE_GROUP.UPPER_CHEST,\n      MUSCLE_GROUP.SHOULDERS,\n      MUSCLE_GROUP.TRICEPS,\n    ],\n    instructions: [\n      'Set bench to 30-45 degree incline',\n      'Lie back with feet planted firmly',\n      'Grip barbell with hands slightly wider than shoulder-width',\n      'Lower bar to upper chest with control',\n      'Press bar back up to starting position',\n    ],\n    steps: [\n      {\n        title: 'Setup',\n        description: 'Set the bench to a 30-45 degree incline angle.',\n      },\n      {\n        title: 'Position',\n        description: 'Lie back with feet planted firmly on the ground.',\n      },\n      {\n        title: 'Grip',\n        description:\n          'Grip the barbell with hands slightly wider than shoulder-width.',\n      },\n      {\n        title: 'Execution',\n        description:\n          'Lower the bar to your upper chest with control, then press back up.',\n      },\n    ],\n    media: {\n      images: ['/exercise-images/incline-bench.jpg'],\n      featuredImage: '/exercise-images/incline-bench.jpg',\n    },\n  },\n  {\n    id: createExerciseVariantId('decline-bench'),\n    name: 'Decline Bench Press',\n    description: 'Targets lower chest more than flat bench press.',\n    focus: 'Lower Chest Focus',\n    difficulty: DIFFICULTY.INTERMEDIATE,\n    equipment: [EQUIPMENT.BARBELL, EQUIPMENT.DECLINE_BENCH],\n    muscleGroups: [\n      MUSCLE_GROUP.LOWER_CHEST,\n      MUSCLE_GROUP.SHOULDERS,\n      MUSCLE_GROUP.TRICEPS,\n    ],\n    instructions: [\n      'Set bench to 15-30 degree decline',\n      'Secure feet under the foot pads',\n      'Grip barbell with hands slightly wider than shoulder-width',\n      'Lower bar to lower chest with control',\n      'Press bar back up to starting position',\n    ],\n    steps: [\n      {\n        title: 'Setup',\n        description: 'Set the bench to a 15-30 degree decline angle.',\n      },\n      {\n        title: 'Position',\n        description: 'Secure your feet under the foot pads for stability.',\n      },\n      {\n        title: 'Execution',\n        description:\n          'Lower the bar to your lower chest with control, then press back up.',\n      },\n    ],\n    media: {\n      images: ['/exercise-images/decline-bench.jpg'],\n      featuredImage: '/exercise-images/decline-bench.jpg',\n    },\n  },\n  {\n    id: createExerciseVariantId('dumbbell-bench'),\n    name: 'Dumbbell Bench Press',\n    description: 'Allows greater range of motion and stabilizer engagement.',\n    focus: 'Stabilizer Focus',\n    difficulty: DIFFICULTY.INTERMEDIATE,\n    equipment: [EQUIPMENT.DUMBBELL, EQUIPMENT.BENCH],\n    muscleGroups: [\n      MUSCLE_GROUP.CHEST,\n      MUSCLE_GROUP.SHOULDERS,\n      MUSCLE_GROUP.TRICEPS,\n    ],\n    instructions: [\n      'Lie flat on bench with dumbbells at chest level',\n      'Press dumbbells up until arms are fully extended',\n      'Lower dumbbells back to chest with control',\n      'Keep core engaged throughout movement',\n      'Maintain neutral wrist position',\n    ],\n    steps: [\n      {\n        title: 'Setup',\n        description: 'Lie flat on the bench with dumbbells at chest level.',\n      },\n      {\n        title: 'Execution',\n        description: 'Press the dumbbells up until arms are fully extended.',\n      },\n      {\n        title: 'Control',\n        description: 'Lower the dumbbells back to chest with control.',\n      },\n    ],\n    media: {\n      images: ['/exercise-images/dumbbell-bench.jpg'],\n      featuredImage: '/exercise-images/dumbbell-bench.jpg',\n    },\n  },\n];\n\nconst squatVariants: ExerciseVariant[] = [\n  {\n    id: createExerciseVariantId('squat-basic'),\n    name: 'Squat',\n    description:\n      'A fundamental lower body exercise targeting the legs and glutes.',\n    focus: 'Overall Lower Body',\n    difficulty: DIFFICULTY.BEGINNER,\n    equipment: [EQUIPMENT.BODYWEIGHT],\n    muscleGroups: [MUSCLE_GROUP.LEGS, MUSCLE_GROUP.GLUTES],\n    instructions: [\n      'Stand with feet shoulder-width apart',\n      'Lower hips back and down as if sitting in a chair',\n      'Keep knees tracking over toes',\n      'Return to standing position',\n    ],\n    steps: [\n      {\n        title: 'Starting Position',\n        description: 'Stand with feet shoulder-width apart.',\n      },\n      {\n        title: 'Movement',\n        description: 'Lower hips back and down as if sitting in a chair.',\n      },\n      {\n        title: 'Form',\n        description: 'Keep knees tracking over toes.',\n      },\n      {\n        title: 'Return',\n        description: 'Return to standing position.',\n      },\n    ],\n    media: {\n      images: ['/exercise-images/squat.jpg'],\n      featuredImage: '/exercise-images/squat.jpg',\n    },\n  },\n  {\n    id: createExerciseVariantId('goblet-squat'),\n    name: 'Goblet Squat',\n    description: 'Squat variation with a dumbbell held at chest level.',\n    focus: 'Form Focus',\n    difficulty: DIFFICULTY.BEGINNER,\n    equipment: [EQUIPMENT.DUMBBELL],\n    muscleGroups: [MUSCLE_GROUP.LEGS, MUSCLE_GROUP.GLUTES, MUSCLE_GROUP.CORE],\n    instructions: [\n      'Hold dumbbell vertically at chest level',\n      'Stand with feet shoulder-width apart',\n      'Lower into squat position',\n      'Keep chest up and core engaged',\n      'Return to standing position',\n    ],\n    steps: [\n      {\n        title: 'Setup',\n        description: 'Hold a dumbbell vertically at chest level.',\n      },\n      {\n        title: 'Position',\n        description: 'Stand with feet shoulder-width apart.',\n      },\n      {\n        title: 'Movement',\n        description: 'Lower into squat position while keeping chest up.',\n      },\n    ],\n    media: {\n      images: ['/exercise-images/goblet-squat.jpg'],\n      featuredImage: '/exercise-images/goblet-squat.jpg',\n    },\n  },\n];\n\nconst pushUpVariants: ExerciseVariant[] = [\n  {\n    id: createExerciseVariantId('pushup-basic'),\n    name: 'Push-up',\n    description:\n      'A bodyweight exercise that builds upper body and core strength.',\n    focus: 'Overall Upper Body',\n    difficulty: DIFFICULTY.BEGINNER,\n    equipment: [EQUIPMENT.BODYWEIGHT],\n    muscleGroups: [MUSCLE_GROUP.CHEST, MUSCLE_GROUP.TRICEPS, MUSCLE_GROUP.CORE],\n    instructions: [\n      'Start in plank position with hands under shoulders',\n      'Lower body until chest nearly touches ground',\n      'Push back up to starting position',\n      'Keep core engaged throughout movement',\n    ],\n    steps: [\n      {\n        title: 'Starting Position',\n        description: 'Start in plank position with hands under shoulders.',\n      },\n      {\n        title: 'Movement',\n        description: 'Lower body until chest nearly touches ground.',\n      },\n      {\n        title: 'Return',\n        description: 'Push back up to starting position.',\n      },\n    ],\n    media: {\n      images: ['/exercise-images/pushup.jpg'],\n      featuredImage: '/exercise-images/pushup.jpg',\n    },\n  },\n  {\n    id: createExerciseVariantId('incline-pushup'),\n    name: 'Incline Push-up',\n    description: 'Easier variation with hands elevated.',\n    focus: 'Beginner Friendly',\n    difficulty: DIFFICULTY.BEGINNER,\n    equipment: [EQUIPMENT.BENCH, EQUIPMENT.STEP],\n    muscleGroups: [\n      MUSCLE_GROUP.CHEST,\n      MUSCLE_GROUP.TRICEPS,\n      MUSCLE_GROUP.SHOULDERS,\n    ],\n    instructions: [\n      'Place hands on elevated surface (bench, step, etc.)',\n      'Keep body in straight line from head to heels',\n      'Lower chest toward elevated surface',\n      'Push back up to starting position',\n      'Maintain core engagement throughout',\n    ],\n    steps: [\n      {\n        title: 'Setup',\n        description: 'Place hands on an elevated surface like a bench or step.',\n      },\n      {\n        title: 'Form',\n        description: 'Keep body in straight line from head to heels.',\n      },\n      {\n        title: 'Movement',\n        description: 'Lower chest toward elevated surface, then push back up.',\n      },\n    ],\n    media: {\n      images: ['/exercise-images/incline-pushup.jpg'],\n      featuredImage: '/exercise-images/incline-pushup.jpg',\n    },\n  },\n  {\n    id: createExerciseVariantId('diamond-pushup'),\n    name: 'Diamond Push-up',\n    description: 'Advanced variation targeting triceps more intensely.',\n    focus: 'Tricep Focus',\n    difficulty: DIFFICULTY.ADVANCED,\n    equipment: [EQUIPMENT.BODYWEIGHT],\n    muscleGroups: [MUSCLE_GROUP.TRICEPS, MUSCLE_GROUP.CHEST, MUSCLE_GROUP.CORE],\n    instructions: [\n      'Form diamond shape with hands under chest',\n      'Keep elbows close to body',\n      'Lower chest toward hands',\n      'Push back up to starting position',\n      'Maintain straight body line throughout',\n    ],\n    steps: [\n      {\n        title: 'Setup',\n        description: 'Form diamond shape with hands under chest.',\n      },\n      {\n        title: 'Form',\n        description: 'Keep elbows close to body.',\n      },\n      {\n        title: 'Movement',\n        description: 'Lower chest toward hands, then push back up.',\n      },\n    ],\n    media: {\n      images: ['/exercise-images/diamond-pushup.jpg'],\n      featuredImage: '/exercise-images/diamond-pushup.jpg',\n    },\n  },\n];\n\n// Mock exercises for ExerciseSelectionModal and ExercisesList\nexport const mockExercises: Exercise[] = [\n  {\n    id: createExerciseId('bench-press'),\n    name: 'Bench Press',\n    category: CATEGORY.STRENGTH,\n    description:\n      'A fundamental upper body exercise targeting the chest, triceps, and shoulders.',\n    variants: benchPressVariants,\n    mainVariantId: createExerciseVariantId('bench-press-basic'),\n    icon: '🏋️',\n    iconColor: 'bg-indigo-100 text-indigo-600',\n    isFavorite: false,\n    isPopular: true,\n    rating: 4.8,\n    summary: {\n      difficultyRange: {\n        min: DIFFICULTY.INTERMEDIATE,\n        max: DIFFICULTY.INTERMEDIATE,\n      },\n      equipmentOptions: [\n        EQUIPMENT.BARBELL,\n        EQUIPMENT.BENCH,\n        EQUIPMENT.DUMBBELL,\n        EQUIPMENT.INCLINE_BENCH,\n        EQUIPMENT.DECLINE_BENCH,\n      ],\n      primaryMuscleGroups: [\n        MUSCLE_GROUP.CHEST,\n        MUSCLE_GROUP.TRICEPS,\n        MUSCLE_GROUP.SHOULDERS,\n        MUSCLE_GROUP.UPPER_CHEST,\n        MUSCLE_GROUP.LOWER_CHEST,\n      ],\n    },\n    tags: ['compound', 'upper-body', 'strength'],\n  },\n  {\n    id: createExerciseId('squats'),\n    name: 'Squats',\n    category: CATEGORY.STRENGTH,\n    description:\n      'A fundamental lower body exercise targeting the legs and glutes.',\n    variants: squatVariants,\n    mainVariantId: createExerciseVariantId('squat-basic'),\n    icon: '🏋️',\n    iconColor: 'bg-indigo-100 text-indigo-600',\n    isFavorite: false,\n    rating: 4.9,\n    summary: {\n      difficultyRange: {\n        min: DIFFICULTY.BEGINNER,\n        max: DIFFICULTY.BEGINNER,\n      },\n      equipmentOptions: [EQUIPMENT.BODYWEIGHT, EQUIPMENT.DUMBBELL],\n      primaryMuscleGroups: [\n        MUSCLE_GROUP.LEGS,\n        MUSCLE_GROUP.GLUTES,\n        MUSCLE_GROUP.CORE,\n      ],\n    },\n    tags: ['compound', 'lower-body', 'strength'],\n  },\n  {\n    id: createExerciseId('push-ups'),\n    name: 'Push-ups',\n    category: CATEGORY.STRENGTH,\n    description:\n      'A bodyweight exercise that builds upper body and core strength.',\n    variants: pushUpVariants,\n    mainVariantId: createExerciseVariantId('pushup-basic'),\n    icon: '💪',\n    iconColor: 'bg-indigo-100 text-indigo-600',\n    isFavorite: false,\n    rating: 4.6,\n    summary: {\n      difficultyRange: {\n        min: DIFFICULTY.BEGINNER,\n        max: DIFFICULTY.ADVANCED,\n      },\n      equipmentOptions: [EQUIPMENT.BODYWEIGHT, EQUIPMENT.BENCH, EQUIPMENT.STEP],\n      primaryMuscleGroups: [\n        MUSCLE_GROUP.CHEST,\n        MUSCLE_GROUP.TRICEPS,\n        MUSCLE_GROUP.CORE,\n        MUSCLE_GROUP.SHOULDERS,\n      ],\n    },\n    tags: ['bodyweight', 'upper-body', 'strength'],\n  },\n];\n\n// Mock routines for ExerciseDetail\nexport const mockRoutines: Routine[] = [\n  {\n    id: 'upper-body',\n    name: 'Upper Body Split',\n    schedule: 'Mon, Wed, Fri • 12 exercises',\n    exercises: 12,\n    isSelected: false,\n  },\n  {\n    id: 'push-day',\n    name: 'Push Day',\n    schedule: 'Tue, Sat • 8 exercises',\n    exercises: 8,\n    isSelected: false,\n  },\n  {\n    id: 'chest-focus',\n    name: 'Chest Focus',\n    schedule: 'Thu • 6 exercises',\n    exercises: 6,\n    isSelected: true,\n  },\n];\n\n// Legacy mock data for backward compatibility (deprecated)\nexport const mockExerciseData = mockExercises[0];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1118, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/types/index.ts"],"sourcesContent":["/**\n * Exercise types for Peak Health\n */\n\n// Re-export all constants\nexport * from './constants';\n\n// Re-export all ID types\nexport * from './ids';\n\n// Re-export main exercise interfaces\nexport * from './exercise';\n\n// Re-export API types\nexport * from './api';\n\n// Re-export utility types\nexport * from './utils';\n\n// Re-export UI types\nexport * from './ui';\n\n// Re-export data constants and mock data\nexport * from './data';\nexport * from './mockData';\n"],"names":[],"mappings":"AAAA;;CAEC,GAED,0BAA0B;;AAC1B;AAEA,yBAAyB;AACzB;AAEA,qCAAqC;AACrC;AAEA,sBAAsB;AACtB;AAEA,0BAA0B;AAC1B;AAEA,qBAAqB;AACrB;AAEA,yCAAyC;AACzC;AACA","debugId":null}},
    {"offset": {"line": 1167, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/utils/exerciseUtils.ts"],"sourcesContent":["import { Exercise, ExerciseVariant, Difficulty } from '../types';\n\nexport const getDifficultyColor = (difficulty: Difficulty) => {\n  const colors = {\n    Beginner: 'bg-green-100 text-green-700',\n    Intermediate: 'bg-yellow-100 text-yellow-700',\n    Advanced: 'bg-red-100 text-red-700',\n    Unknown: 'bg-gray-100 text-gray-700',\n  };\n  return colors[difficulty] || colors.Unknown;\n};\n\nexport const getDifficultyColorWithBorder = (difficulty: Difficulty) => {\n  switch (difficulty) {\n    case 'Beginner':\n      return 'bg-emerald-100 text-emerald-700 border-emerald-200';\n    case 'Intermediate':\n      return 'bg-amber-100 text-amber-700 border-amber-200';\n    case 'Advanced':\n      return 'bg-red-100 text-red-700 border-red-200';\n    case 'Unknown':\n      return 'bg-gray-100 text-gray-700 border-gray-200';\n    default:\n      return 'bg-gray-100 text-gray-700 border-gray-200';\n  }\n};\n\nexport const getCategoryColor = (category: string) => {\n  const colors = {\n    Strength: 'bg-indigo-100 text-indigo-700',\n    Cardio: 'bg-green-100 text-green-700',\n    Flexibility: 'bg-purple-100 text-purple-700',\n    Balance: 'bg-yellow-100 text-yellow-700',\n  };\n  return colors[category as keyof typeof colors] || colors.Strength;\n};\n\nexport const getEffectiveExercise = (\n  exercise: Exercise,\n  selectedVariant?: ExerciseVariant\n): ExerciseVariant => {\n  if (!selectedVariant) {\n    // Return the main variant if no variant is selected\n    const mainVariant = exercise.variants.find(\n      v => v.id === exercise.mainVariantId\n    );\n    if (!mainVariant) {\n      throw new Error(`No main variant found for exercise ${exercise.id}`);\n    }\n    return mainVariant;\n  }\n\n  return selectedVariant;\n};\n\nexport const createVariantExercise = (\n  exercise: Exercise,\n  variant: ExerciseVariant\n): ExerciseVariant => {\n  return variant;\n};\n"],"names":[],"mappings":";;;;;;;AAEO,MAAM,qBAAqB,CAAC;IACjC,MAAM,SAAS;QACb,UAAU;QACV,cAAc;QACd,UAAU;QACV,SAAS;IACX;IACA,OAAO,MAAM,CAAC,WAAW,IAAI,OAAO,OAAO;AAC7C;AAEO,MAAM,+BAA+B,CAAC;IAC3C,OAAQ;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF;AAEO,MAAM,mBAAmB,CAAC;IAC/B,MAAM,SAAS;QACb,UAAU;QACV,QAAQ;QACR,aAAa;QACb,SAAS;IACX;IACA,OAAO,MAAM,CAAC,SAAgC,IAAI,OAAO,QAAQ;AACnE;AAEO,MAAM,uBAAuB,CAClC,UACA;IAEA,IAAI,CAAC,iBAAiB;QACpB,oDAAoD;QACpD,MAAM,cAAc,SAAS,QAAQ,CAAC,IAAI,CACxC,CAAA,IAAK,EAAE,EAAE,KAAK,SAAS,aAAa;QAEtC,IAAI,CAAC,aAAa;YAChB,MAAM,IAAI,MAAM,AAAC,sCAAiD,OAAZ,SAAS,EAAE;QACnE;QACA,OAAO;IACT;IAEA,OAAO;AACT;AAEO,MAAM,wBAAwB,CACnC,UACA;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1229, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/components/shared/CategoryBadge.tsx"],"sourcesContent":["import { getCategoryColor } from '../../utils/exerciseUtils';\n\nimport { Badge } from '@/components/ui/badge';\n\ninterface CategoryBadgeProps {\n  category: string;\n  variant?: 'default' | 'outline';\n  className?: string;\n}\n\nexport const CategoryBadge = ({\n  category,\n  variant = 'outline',\n  className = '',\n}: CategoryBadgeProps) => {\n  return (\n    <Badge\n      variant={variant}\n      className={`text-xs ${getCategoryColor(category)} ${className}`}\n    >\n      {category}\n    </Badge>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAQO,MAAM,gBAAgB;QAAC,EAC5B,QAAQ,EACR,UAAU,SAAS,EACnB,YAAY,EAAE,EACK;IACnB,qBACE,qYAAC,oIAAA,CAAA,QAAK;QACJ,SAAS;QACT,WAAW,AAAC,WAAwC,OAA9B,CAAA,GAAA,yJAAA,CAAA,mBAAgB,AAAD,EAAE,WAAU,KAAa,OAAV;kBAEnD;;;;;;AAGP;KAba","debugId":null}},
    {"offset": {"line": 1262, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/components/shared/DifficultyBadge.tsx"],"sourcesContent":["import { Zap, Award, Users, Info } from 'lucide-react';\n\nimport { Difficulty } from '../../types';\nimport { getDifficultyColorWithBorder } from '../../utils/exerciseUtils';\n\nimport { Badge } from '@/components/ui/badge';\n\ninterface DifficultyBadgeProps {\n  difficulty: Difficulty;\n  showIcon?: boolean;\n  className?: string;\n}\n\nexport const DifficultyBadge = ({\n  difficulty,\n  showIcon = true,\n  className = '',\n}: DifficultyBadgeProps) => {\n  const getDifficultyIcon = (difficulty: Difficulty) => {\n    switch (difficulty) {\n      case 'Beginner':\n        return <Zap className=\"w-3 h-3\" />;\n      case 'Intermediate':\n        return <Award className=\"w-3 h-3\" />;\n      case 'Advanced':\n        return <Users className=\"w-3 h-3\" />;\n      case 'Unknown':\n        return <Info className=\"w-3 h-3\" />;\n      default:\n        return <Info className=\"w-3 h-3\" />;\n    }\n  };\n\n  return (\n    <Badge\n      className={`${getDifficultyColorWithBorder(\n        difficulty\n      )} text-xs border ${className}`}\n    >\n      {showIcon && getDifficultyIcon(difficulty)}\n      <span className={showIcon ? 'ml-1' : ''}>{difficulty}</span>\n    </Badge>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;;;;;AAQO,MAAM,kBAAkB;QAAC,EAC9B,UAAU,EACV,WAAW,IAAI,EACf,YAAY,EAAE,EACO;IACrB,MAAM,oBAAoB,CAAC;QACzB,OAAQ;YACN,KAAK;gBACH,qBAAO,qYAAC,uRAAA,CAAA,MAAG;oBAAC,WAAU;;;;;;YACxB,KAAK;gBACH,qBAAO,qYAAC,2RAAA,CAAA,QAAK;oBAAC,WAAU;;;;;;YAC1B,KAAK;gBACH,qBAAO,qYAAC,2RAAA,CAAA,QAAK;oBAAC,WAAU;;;;;;YAC1B,KAAK;gBACH,qBAAO,qYAAC,yRAAA,CAAA,OAAI;oBAAC,WAAU;;;;;;YACzB;gBACE,qBAAO,qYAAC,yRAAA,CAAA,OAAI;oBAAC,WAAU;;;;;;QAC3B;IACF;IAEA,qBACE,qYAAC,oIAAA,CAAA,QAAK;QACJ,WAAW,AAAC,GAEQ,OAFN,CAAA,GAAA,yJAAA,CAAA,+BAA4B,AAAD,EACvC,aACA,oBAA4B,OAAV;;YAEnB,YAAY,kBAAkB;0BAC/B,qYAAC;gBAAK,WAAW,WAAW,SAAS;0BAAK;;;;;;;;;;;;AAGhD;KA9Ba","debugId":null}},
    {"offset": {"line": 1353, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/components/ui/card.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Card = ({ className, ...props }: React.ComponentProps<'div'>) => {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        'bg-card text-card-foreground flex flex-col gap-6 rounded-xl border',\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\nconst CardHeader = ({ className, ...props }: React.ComponentProps<'div'>) => {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        '@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 pt-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6',\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\nconst CardTitle = ({ className, ...props }: React.ComponentProps<'div'>) => {\n  return (\n    <h4\n      data-slot=\"card-title\"\n      className={cn('leading-none', className)}\n      {...props}\n    />\n  );\n};\n\nconst CardDescription = ({\n  className,\n  ...props\n}: React.ComponentProps<'div'>) => {\n  return (\n    <p\n      data-slot=\"card-description\"\n      className={cn('text-muted-foreground', className)}\n      {...props}\n    />\n  );\n};\n\nconst CardAction = ({ className, ...props }: React.ComponentProps<'div'>) => {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        'col-start-2 row-span-2 row-start-1 self-start justify-self-end',\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\nconst CardContent = ({ className, ...props }: React.ComponentProps<'div'>) => {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn('px-6 [&:last-child]:pb-6', className)}\n      {...props}\n    />\n  );\n};\n\nconst CardFooter = ({ className, ...props }: React.ComponentProps<'div'>) => {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn('flex items-center px-6 pb-6 [.border-t]:pt-6', className)}\n      {...props}\n    />\n  );\n};\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n};\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,MAAM,OAAO;QAAC,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sEACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXM;AAaN,MAAM,aAAa;QAAC,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mKACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXM;AAaN,MAAM,YAAY;QAAC,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gBAAgB;QAC7B,GAAG,KAAK;;;;;;AAGf;MARM;AAUN,MAAM,kBAAkB;QAAC,EACvB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGf;MAXM;AAaN,MAAM,aAAa;QAAC,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXM;AAaN,MAAM,cAAc;QAAC,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;;;;;AAGf;MARM;AAUN,MAAM,aAAa;QAAC,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;MARM","debugId":null}},
    {"offset": {"line": 1475, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/components/shared/ExerciseCard.tsx"],"sourcesContent":["import { Heart, Star, ChevronRight } from 'lucide-react';\nimport { useState } from 'react';\n\nimport { useFavoriteManagement } from '../../hooks/useExercises';\nimport { Exercise, DIFFICULTY } from '../../types';\n\nimport { CategoryBadge } from './CategoryBadge';\nimport { DifficultyBadge } from './DifficultyBadge';\n\nimport { Button } from '@/components/ui/button';\nimport { Card } from '@/components/ui/card';\nimport { useAuth } from '@/features/auth/context/AuthContext';\n\ninterface ExerciseCardProps {\n  exercise: Exercise;\n  onClick?: () => void;\n  onFavoriteToggle?: () => void;\n  showChevron?: boolean;\n  isSelected?: boolean;\n  className?: string;\n  size?: 'sm' | 'md' | 'lg';\n}\n\nexport const ExerciseCard = ({\n  exercise,\n  onClick,\n  onFavoriteToggle,\n  showChevron = false,\n  isSelected = false,\n  className = '',\n  size = 'md',\n}: ExerciseCardProps) => {\n  const [isFavorite, setIsFavorite] = useState(exercise.isFavorite);\n  const [isUpdatingFavorite, setIsUpdatingFavorite] = useState(false);\n  const { addToFavorites, removeFromFavorites } = useFavoriteManagement();\n  const { userId } = useAuth();\n\n  // Helper function to get the main variant\n  const getMainVariant = () => {\n    return exercise.variants.find(v => v.id === exercise.mainVariantId);\n  };\n\n  const mainVariant = getMainVariant();\n\n  const handleFavoriteClick = async (e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (!userId) {\n      // If no userId, just call the callback if provided\n      onFavoriteToggle?.();\n      return;\n    }\n\n    if (isUpdatingFavorite) return;\n\n    setIsUpdatingFavorite(true);\n    try {\n      if (isFavorite) {\n        await removeFromFavorites(userId, exercise.id);\n        setIsFavorite(false);\n      } else {\n        await addToFavorites(userId, exercise.id);\n        setIsFavorite(true);\n      }\n      onFavoriteToggle?.();\n    } catch {\n      // Revert the state on error\n      setIsFavorite(exercise.isFavorite);\n    } finally {\n      setIsUpdatingFavorite(false);\n    }\n  };\n\n  const imageHeights = {\n    sm: 'h-24',\n    md: 'h-32',\n    lg: 'h-40',\n  };\n\n  const iconSizes = {\n    sm: 'text-2xl',\n    md: 'text-3xl',\n    lg: 'text-4xl',\n  };\n\n  const paddingSizes = {\n    sm: 'p-3',\n    md: 'p-4',\n    lg: 'p-4',\n  };\n\n  const sizeClasses = {\n    sm: 'w-full max-w-xs',\n    md: 'w-full max-w-sm',\n    lg: 'w-full max-w-md',\n  };\n\n  return (\n    <Card\n      className={`cursor-pointer hover:shadow-md transition-shadow ${\n        sizeClasses[size]\n      } mx-auto ${\n        isSelected\n          ? 'border-primary shadow-lg ring-1 ring-primary/20'\n          : 'border-gray-200 hover:border-gray-300'\n      } ${className}`}\n      onClick={onClick}\n    >\n      {/* Exercise Image/Icon */}\n      <div className={`bg-gray-100 ${imageHeights[size]} relative`}>\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <div className={iconSizes[size]}>{exercise.icon}</div>\n        </div>\n\n        {/* Overlay Info */}\n        <div className=\"absolute bottom-3 left-3 right-3\">\n          <div className=\"flex items-center justify-between\">\n            <DifficultyBadge\n              difficulty={mainVariant?.difficulty || DIFFICULTY.UNKNOWN}\n            />\n            <div className=\"flex items-center gap-2\">\n              {exercise.isPopular && (\n                <div className=\"bg-white/90 backdrop-blur-sm rounded-full px-2 py-1 flex items-center gap-1\">\n                  <Star className=\"w-3 h-3 text-yellow-500 fill-yellow-500\" />\n                  <span className=\"text-xs text-gray-700\">Popular</span>\n                </div>\n              )}\n              {exercise.isNew && (\n                <div className=\"bg-green-500 rounded-full px-2 py-1\">\n                  <span className=\"text-xs text-white\">New</span>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {exercise.rating && size !== 'sm' && (\n          <div className=\"absolute top-3 right-3 flex items-center gap-1 bg-white px-2 py-1 rounded-full text-sm\">\n            <Star className=\"w-3 h-3 text-yellow-500 fill-yellow-500\" />\n            <span className=\"text-gray-600\">{exercise.rating}</span>\n          </div>\n        )}\n      </div>\n\n      {/* Exercise Info */}\n      <div className={paddingSizes[size]}>\n        <div className=\"flex items-start justify-between mb-2\">\n          <div className=\"flex-1 min-w-0\">\n            <h3 className=\"font-semibold text-gray-800 mb-2 truncate\">\n              {exercise.name}\n            </h3>\n            <div className=\"flex items-center text-sm text-gray-600 mb-3\">\n              <span className=\"truncate\">\n                {mainVariant?.muscleGroups.join(', ') ||\n                  'Multiple muscle groups'}\n              </span>\n            </div>\n          </div>\n          {showChevron && (\n            <ChevronRight\n              className={`w-4 h-4 text-gray-400 group-hover:text-primary transition-all ${\n                isSelected ? 'rotate-90' : ''\n              }`}\n            />\n          )}\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-2 flex-1 min-w-0\">\n            <CategoryBadge category={exercise.category} />\n            {exercise.variants && exercise.variants.length > 0 && (\n              <span className=\"text-xs text-gray-500 whitespace-nowrap\">\n                {exercise.variants.length} variants\n              </span>\n            )}\n          </div>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={handleFavoriteClick}\n            disabled={isUpdatingFavorite}\n            className=\"flex-shrink-0 ml-2\"\n          >\n            <Heart\n              className={`w-4 h-4 ${\n                isFavorite ? 'text-red-500 fill-red-500' : 'text-gray-400'\n              } ${isUpdatingFavorite ? 'animate-pulse' : ''}`}\n            />\n          </Button>\n        </div>\n      </div>\n    </Card>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1818, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/components/ExercisesList/ExerciseGrid.tsx"],"sourcesContent":["import { Grid, List } from 'lucide-react';\n\nimport { useExerciseFilters } from '../../hooks/useExerciseFilters';\nimport { useExerciseSearch as useExerciseSearchService } from '../../hooks/useExercises';\nimport { useExerciseSearch } from '../../hooks/useExerciseSearch';\nimport { Exercise, Category } from '../../types';\nimport { filterExercises } from '../../utils/filterUtils';\nimport { ExerciseCard } from '../shared/ExerciseCard';\n\nimport { Button } from '@/components/ui/button';\n\ninterface ExerciseGridProps {\n  exercises: Exercise[];\n  activeCategory: string;\n  viewMode: 'grid' | 'list';\n  onViewModeChange: (mode: 'grid' | 'list') => void;\n  onExerciseClick: (exercise: Exercise) => void;\n}\n\nexport const ExerciseGrid = ({\n  exercises,\n  activeCategory,\n  viewMode,\n  onViewModeChange,\n  onExerciseClick,\n}: ExerciseGridProps) => {\n  const { searchTerm } = useExerciseSearch();\n  const { filters } = useExerciseFilters();\n\n  // Use service-based search when there are search parameters\n  const hasSearchParams =\n    searchTerm ||\n    filters.difficulties.length > 0 ||\n    filters.muscleGroups.length > 0 ||\n    filters.equipment.length > 0;\n\n  const { exercises: searchResults, isLoading: isSearching } =\n    useExerciseSearchService({\n      searchTerm: searchTerm || undefined,\n      category:\n        activeCategory === 'All Exercises'\n          ? undefined\n          : (activeCategory as Category),\n      difficulties:\n        filters.difficulties.length > 0 ? filters.difficulties : undefined,\n      equipment: filters.equipment.length > 0 ? filters.equipment : undefined,\n      muscleGroups:\n        filters.muscleGroups.length > 0 ? filters.muscleGroups : undefined,\n    });\n\n  // Use search results if we have search parameters, otherwise use the passed exercises\n  const displayExercises = hasSearchParams ? searchResults : exercises;\n\n  // Apply client-side filtering for category and additional filters\n  const filteredExercises = filterExercises(\n    displayExercises,\n    '', // Search term is already handled by service\n    activeCategory === 'All Exercises' ? 'All' : activeCategory,\n    hasSearchParams\n      ? { difficulties: [], muscleGroups: [], equipment: [] }\n      : filters // Don't double-filter\n  );\n\n  const getSectionTitle = () => {\n    if (activeCategory === 'All Exercises') return 'All Exercises';\n    if (activeCategory === 'Favorites') return 'Favorite Exercises';\n    return `${activeCategory} Exercises`;\n  };\n\n  if (isSearching) {\n    return (\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h2 className=\"text-xl font-bold text-gray-800\">\n            {getSectionTitle()}\n          </h2>\n          <div className=\"flex border border-gray-300 rounded-md\">\n            <Button\n              variant={viewMode === 'grid' ? 'default' : 'ghost'}\n              size=\"sm\"\n              onClick={() => onViewModeChange('grid')}\n              className=\"rounded-r-none\"\n            >\n              <Grid className=\"w-4 h-4\" />\n            </Button>\n            <Button\n              variant={viewMode === 'list' ? 'default' : 'ghost'}\n              size=\"sm\"\n              onClick={() => onViewModeChange('list')}\n              className=\"rounded-l-none\"\n            >\n              <List className=\"w-4 h-4\" />\n            </Button>\n          </div>\n        </div>\n        <div className=\"animate-pulse\">\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-5 gap-4 sm:gap-6\">\n            {Array.from({ length: 8 }).map((_, i) => (\n              <div key={i} className=\"h-64 bg-gray-200 rounded\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"mb-8\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-xl font-bold text-gray-800\">{getSectionTitle()}</h2>\n        <div className=\"flex border border-gray-300 rounded-md\">\n          <Button\n            variant={viewMode === 'grid' ? 'default' : 'ghost'}\n            size=\"sm\"\n            onClick={() => onViewModeChange('grid')}\n            className=\"rounded-r-none\"\n          >\n            <Grid className=\"w-4 h-4\" />\n          </Button>\n          <Button\n            variant={viewMode === 'list' ? 'default' : 'ghost'}\n            size=\"sm\"\n            onClick={() => onViewModeChange('list')}\n            className=\"rounded-l-none\"\n          >\n            <List className=\"w-4 h-4\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-5 gap-4 sm:gap-6\">\n        {filteredExercises.map(exercise => (\n          <ExerciseCard\n            key={exercise.id}\n            exercise={exercise}\n            onClick={() => onExerciseClick(exercise)}\n          />\n        ))}\n      </div>\n\n      {filteredExercises.length === 0 && (\n        <div className=\"text-center py-12\">\n          <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <Grid className=\"w-8 h-8 text-gray-400\" />\n          </div>\n          <h3 className=\"font-medium text-gray-900 mb-2\">No exercises found</h3>\n          <p className=\"text-gray-500\">\n            Try adjusting your search or filter criteria\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2104, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/components/ui/checkbox.tsx"],"sourcesContent":["'use client';\n\nimport * as CheckboxPrimitive from '@radix-ui/react-checkbox';\nimport { CheckIcon } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Checkbox = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) => {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        'peer border bg-input-background dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50',\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"flex items-center justify-center text-current transition-none\"\n      >\n        <CheckIcon className=\"size-3.5\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  );\n};\n\nexport { Checkbox };\n"],"names":[],"mappings":";;;;AAEA;AACA;AAGA;AANA;;;;;AAQA,MAAM,WAAW;QAAC,EAChB,SAAS,EACT,GAAG,OACiD;IACpD,qBACE,qYAAC,wXAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6fACA;QAED,GAAG,KAAK;kBAET,cAAA,qYAAC,wXAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;sBAEV,cAAA,qYAAC,+RAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI7B;KArBM","debugId":null}},
    {"offset": {"line": 2156, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/components/ui/dialog.tsx"],"sourcesContent":["'use client';\n\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { XIcon } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    data-slot=\"dialog-overlay\"\n    className={cn(\n      'data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50',\n      className\n    )}\n    {...props}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      data-slot=\"dialog-content\"\n      className={cn(\n        'bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg',\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n        <XIcon />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    data-slot=\"dialog-header\"\n    className={cn('flex flex-col gap-2 text-center sm:text-left', className)}\n    {...props}\n  />\n);\nDialogHeader.displayName = 'DialogHeader';\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    data-slot=\"dialog-footer\"\n    className={cn(\n      'flex flex-col-reverse gap-2 sm:flex-row sm:justify-end',\n      className\n    )}\n    {...props}\n  />\n);\nDialogFooter.displayName = 'DialogFooter';\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    data-slot=\"dialog-title\"\n    className={cn('text-lg leading-none font-semibold', className)}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    data-slot=\"dialog-description\"\n    className={cn('text-muted-foreground text-sm', className)}\n    {...props}\n  />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,sXAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,sXAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,sXAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,sXAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,qWAAA,CAAA,aAAgB,CAGpC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qYAAC,sXAAA,CAAA,UAAuB;QACtB,KAAK;QACL,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;;KAXP;AAcN,cAAc,WAAW,GAAG,sXAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,qWAAA,CAAA,aAAgB,OAGpC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAClC,qYAAC;;0BACC,qYAAC;;;;;0BACD,qYAAC,sXAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,aAAU;gBACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBAER;kCACD,qYAAC,sXAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,qYAAC,uRAAA,CAAA,QAAK;;;;;0CACN,qYAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,sXAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe;QAAC,EACpB,SAAS,EACT,GAAG,OACkC;yBACrC,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;MAPP;AAUN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe;QAAC,EACpB,SAAS,EACT,GAAG,OACkC;yBACrC,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;;MAVP;AAaN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,qWAAA,CAAA,aAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qYAAC,sXAAA,CAAA,QAAqB;QACpB,KAAK;QACL,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG,sXAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,qWAAA,CAAA,aAAgB,OAGxC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,qYAAC,sXAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,kBAAkB,WAAW,GAAG,sXAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2329, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/components/ui/label.tsx"],"sourcesContent":["'use client';\n\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Label = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) => {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        'flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50',\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\nexport { Label };\n"],"names":[],"mappings":";;;;AAEA;AAGA;AALA;;;;AAOA,MAAM,QAAQ;QAAC,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,qYAAC,wXAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdM","debugId":null}},
    {"offset": {"line": 2364, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/components/ui/separator.tsx"],"sourcesContent":["'use client';\n\nimport * as SeparatorPrimitive from '@radix-ui/react-separator';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Separator = ({\n  className,\n  orientation = 'horizontal',\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) => {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator-root\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        'bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px',\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\nexport { Separator };\n"],"names":[],"mappings":";;;;AAEA;AAGA;AALA;;;;AAOA,MAAM,YAAY;QAAC,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACkD;IACrD,qBACE,qYAAC,yXAAA,CAAA,OAAuB;QACtB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAGf;KAlBM","debugId":null}},
    {"offset": {"line": 2401, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/components/ExercisesList/FilterDialog.tsx"],"sourcesContent":["import { useExerciseFilters } from '../../hooks/useExerciseFilters';\nimport { difficulties, equipment, muscleGroups } from '../../types';\n\nimport { Button } from '@/components/ui/button';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { Label } from '@/components/ui/label';\nimport { Separator } from '@/components/ui/separator';\n\ninterface FilterDialogProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport const FilterDialog = ({ isOpen, onClose }: FilterDialogProps) => {\n  const { filters, handleFilterChange, clearFilters } = useExerciseFilters();\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <DialogTitle>Filter Exercises</DialogTitle>\n          <DialogDescription>\n            Apply filters to narrow down your exercise search results.\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Difficulty Filter */}\n          <div>\n            <Label className=\"font-semibold mb-3 block\">Difficulty</Label>\n            <div className=\"space-y-2\">\n              {difficulties.map(difficulty => (\n                <div key={difficulty} className=\"flex items-center space-x-2\">\n                  <Checkbox\n                    id={`difficulty-${difficulty}`}\n                    checked={filters.difficulties.includes(difficulty)}\n                    onCheckedChange={() =>\n                      handleFilterChange('difficulties', difficulty)\n                    }\n                  />\n                  <Label htmlFor={`difficulty-${difficulty}`}>\n                    {difficulty}\n                  </Label>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <Separator />\n\n          {/* Muscle Groups Filter */}\n          <div>\n            <Label className=\"font-semibold mb-3 block\">Muscle Groups</Label>\n            <div className=\"grid grid-cols-2 gap-2\">\n              {muscleGroups.slice(0, 10).map(group => (\n                <div key={group} className=\"flex items-center space-x-2\">\n                  <Checkbox\n                    id={`muscle-${group}`}\n                    checked={filters.muscleGroups.includes(group)}\n                    onCheckedChange={() =>\n                      handleFilterChange('muscleGroups', group)\n                    }\n                  />\n                  <Label htmlFor={`muscle-${group}`} className=\"text-sm\">\n                    {group}\n                  </Label>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <Separator />\n\n          {/* Equipment Filter */}\n          <div>\n            <Label className=\"font-semibold mb-3 block\">Equipment</Label>\n            <div className=\"space-y-2\">\n              {equipment.slice(0, 7).map(equipmentItem => (\n                <div\n                  key={equipmentItem}\n                  className=\"flex items-center space-x-2\"\n                >\n                  <Checkbox\n                    id={`equipment-${equipmentItem}`}\n                    checked={filters.equipment.includes(equipmentItem)}\n                    onCheckedChange={() =>\n                      handleFilterChange('equipment', equipmentItem)\n                    }\n                  />\n                  <Label htmlFor={`equipment-${equipmentItem}`}>\n                    {equipmentItem}\n                  </Label>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"flex gap-2 pt-4\">\n            <Button onClick={clearFilters} variant=\"outline\" className=\"flex-1\">\n              Clear All\n            </Button>\n            <Button onClick={onClose} className=\"flex-1\">\n              Apply Filters\n            </Button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAOA;AACA;;;;;;;;;;AAOO,MAAM,eAAe;QAAC,EAAE,MAAM,EAAE,OAAO,EAAqB;;IACjE,MAAM,EAAE,OAAO,EAAE,kBAAkB,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,qBAAkB,AAAD;IAEvE,qBACE,qYAAC,qIAAA,CAAA,SAAM;QAAC,MAAM;QAAQ,cAAc;kBAClC,cAAA,qYAAC,qIAAA,CAAA,gBAAa;YAAC,WAAU;;8BACvB,qYAAC,qIAAA,CAAA,eAAY;;sCACX,qYAAC,qIAAA,CAAA,cAAW;sCAAC;;;;;;sCACb,qYAAC,qIAAA,CAAA,oBAAiB;sCAAC;;;;;;;;;;;;8BAKrB,qYAAC;oBAAI,WAAU;;sCAEb,qYAAC;;8CACC,qYAAC,oIAAA,CAAA,QAAK;oCAAC,WAAU;8CAA2B;;;;;;8CAC5C,qYAAC;oCAAI,WAAU;8CACZ,gJAAA,CAAA,eAAY,CAAC,GAAG,CAAC,CAAA,2BAChB,qYAAC;4CAAqB,WAAU;;8DAC9B,qYAAC,uIAAA,CAAA,WAAQ;oDACP,IAAI,AAAC,cAAwB,OAAX;oDAClB,SAAS,QAAQ,YAAY,CAAC,QAAQ,CAAC;oDACvC,iBAAiB,IACf,mBAAmB,gBAAgB;;;;;;8DAGvC,qYAAC,oIAAA,CAAA,QAAK;oDAAC,SAAS,AAAC,cAAwB,OAAX;8DAC3B;;;;;;;2CATK;;;;;;;;;;;;;;;;sCAgBhB,qYAAC,wIAAA,CAAA,YAAS;;;;;sCAGV,qYAAC;;8CACC,qYAAC,oIAAA,CAAA,QAAK;oCAAC,WAAU;8CAA2B;;;;;;8CAC5C,qYAAC;oCAAI,WAAU;8CACZ,gJAAA,CAAA,eAAY,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,CAAA,sBAC7B,qYAAC;4CAAgB,WAAU;;8DACzB,qYAAC,uIAAA,CAAA,WAAQ;oDACP,IAAI,AAAC,UAAe,OAAN;oDACd,SAAS,QAAQ,YAAY,CAAC,QAAQ,CAAC;oDACvC,iBAAiB,IACf,mBAAmB,gBAAgB;;;;;;8DAGvC,qYAAC,oIAAA,CAAA,QAAK;oDAAC,SAAS,AAAC,UAAe,OAAN;oDAAS,WAAU;8DAC1C;;;;;;;2CATK;;;;;;;;;;;;;;;;sCAgBhB,qYAAC,wIAAA,CAAA,YAAS;;;;;sCAGV,qYAAC;;8CACC,qYAAC,oIAAA,CAAA,QAAK;oCAAC,WAAU;8CAA2B;;;;;;8CAC5C,qYAAC;oCAAI,WAAU;8CACZ,gJAAA,CAAA,YAAS,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAA,8BACzB,qYAAC;4CAEC,WAAU;;8DAEV,qYAAC,uIAAA,CAAA,WAAQ;oDACP,IAAI,AAAC,aAA0B,OAAd;oDACjB,SAAS,QAAQ,SAAS,CAAC,QAAQ,CAAC;oDACpC,iBAAiB,IACf,mBAAmB,aAAa;;;;;;8DAGpC,qYAAC,oIAAA,CAAA,QAAK;oDAAC,SAAS,AAAC,aAA0B,OAAd;8DAC1B;;;;;;;2CAXE;;;;;;;;;;;;;;;;sCAkBb,qYAAC;4BAAI,WAAU;;8CACb,qYAAC,qIAAA,CAAA,SAAM;oCAAC,SAAS;oCAAc,SAAQ;oCAAU,WAAU;8CAAS;;;;;;8CAGpE,qYAAC,qIAAA,CAAA,SAAM;oCAAC,SAAS;oCAAS,WAAU;8CAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQzD;GAhGa;;QAC2C,8JAAA,CAAA,qBAAkB;;;KAD7D","debugId":null}},
    {"offset": {"line": 2678, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/hooks/use-mobile.ts"],"sourcesContent":["import * as React from 'react';\n\nconst MOBILE_BREAKPOINT = 768;\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(\n    undefined\n  );\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`);\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);\n    };\n    mql.addEventListener('change', onChange);\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);\n    return () => mql.removeEventListener('change', onChange);\n  }, []);\n\n  return !!isMobile;\n}\n"],"names":[],"mappings":";;;AAAA;;;AAEA,MAAM,oBAAoB;AAEnB,SAAS;;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,qWAAA,CAAA,WAAc,CAC5C;IAGF,qWAAA,CAAA,YAAe;iCAAC;YACd,MAAM,MAAM,OAAO,UAAU,CAAC,AAAC,eAAoC,OAAtB,oBAAoB,GAAE;YACnE,MAAM;kDAAW;oBACf,YAAY,OAAO,UAAU,GAAG;gBAClC;;YACA,IAAI,gBAAgB,CAAC,UAAU;YAC/B,YAAY,OAAO,UAAU,GAAG;YAChC;yCAAO,IAAM,IAAI,mBAAmB,CAAC,UAAU;;QACjD;gCAAG,EAAE;IAEL,OAAO,CAAC,CAAC;AACX;GAhBgB","debugId":null}},
    {"offset": {"line": 2715, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/components/ui/carousel.tsx"],"sourcesContent":["'use client';\n\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from 'embla-carousel-react';\nimport { ArrowLeft, ArrowRight } from 'lucide-react';\nimport * as React from 'react';\n\nimport { Button } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\n\ntype CarouselApi = UseEmblaCarouselType[1];\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>;\ntype CarouselOptions = UseCarouselParameters[0];\ntype CarouselPlugin = UseCarouselParameters[1];\n\ntype CarouselProps = {\n  opts?: CarouselOptions;\n  plugins?: CarouselPlugin;\n  orientation?: 'horizontal' | 'vertical';\n  setApi?: (api: CarouselApi) => void;\n};\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0];\n  api: ReturnType<typeof useEmblaCarousel>[1];\n  scrollPrev: () => void;\n  scrollNext: () => void;\n  canScrollPrev: boolean;\n  canScrollNext: boolean;\n} & CarouselProps;\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null);\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext);\n\n  if (!context) {\n    throw new Error('useCarousel must be used within a <Carousel />');\n  }\n\n  return context;\n}\n\nconst Carousel = ({\n  orientation = 'horizontal',\n  opts,\n  setApi,\n  plugins,\n  className,\n  children,\n  ...props\n}: React.ComponentProps<'div'> & CarouselProps) => {\n  const [carouselRef, api] = useEmblaCarousel(\n    {\n      ...opts,\n      axis: orientation === 'horizontal' ? 'x' : 'y',\n    },\n    plugins\n  );\n  const [canScrollPrev, setCanScrollPrev] = React.useState(false);\n  const [canScrollNext, setCanScrollNext] = React.useState(false);\n\n  const onSelect = React.useCallback((api: CarouselApi) => {\n    if (!api) return;\n    setCanScrollPrev(api.canScrollPrev());\n    setCanScrollNext(api.canScrollNext());\n  }, []);\n\n  const scrollPrev = React.useCallback(() => {\n    api?.scrollPrev();\n  }, [api]);\n\n  const scrollNext = React.useCallback(() => {\n    api?.scrollNext();\n  }, [api]);\n\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (event.key === 'ArrowLeft') {\n        event.preventDefault();\n        scrollPrev();\n      } else if (event.key === 'ArrowRight') {\n        event.preventDefault();\n        scrollNext();\n      }\n    },\n    [scrollPrev, scrollNext]\n  );\n\n  React.useEffect(() => {\n    if (!api || !setApi) return;\n    setApi(api);\n  }, [api, setApi]);\n\n  React.useEffect(() => {\n    if (!api) return;\n    onSelect(api);\n    api.on('reInit', onSelect);\n    api.on('select', onSelect);\n\n    return () => {\n      api?.off('select', onSelect);\n    };\n  }, [api, onSelect]);\n\n  return (\n    <CarouselContext.Provider\n      value={{\n        carouselRef,\n        api: api,\n        opts,\n        orientation:\n          orientation || (opts?.axis === 'y' ? 'vertical' : 'horizontal'),\n        scrollPrev,\n        scrollNext,\n        canScrollPrev,\n        canScrollNext,\n      }}\n    >\n      <div\n        onKeyDownCapture={handleKeyDown}\n        className={cn('relative', className)}\n        role=\"region\"\n        aria-roledescription=\"carousel\"\n        data-slot=\"carousel\"\n        {...props}\n      >\n        {children}\n      </div>\n    </CarouselContext.Provider>\n  );\n};\n\nconst CarouselContent = ({\n  className,\n  ...props\n}: React.ComponentProps<'div'>) => {\n  const { carouselRef, orientation } = useCarousel();\n\n  return (\n    <div\n      ref={carouselRef}\n      className=\"overflow-hidden\"\n      data-slot=\"carousel-content\"\n    >\n      <div\n        className={cn(\n          'flex',\n          orientation === 'horizontal' ? '-ml-4' : '-mt-4 flex-col',\n          className\n        )}\n        {...props}\n      />\n    </div>\n  );\n};\n\nconst CarouselItem = ({ className, ...props }: React.ComponentProps<'div'>) => {\n  const { orientation } = useCarousel();\n\n  return (\n    <div\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      data-slot=\"carousel-item\"\n      className={cn(\n        'min-w-0 shrink-0 grow-0 basis-full',\n        orientation === 'horizontal' ? 'pl-4' : 'pt-4',\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\nconst CarouselPrevious = ({\n  className,\n  variant = 'outline',\n  size = 'icon',\n  ...props\n}: React.ComponentProps<typeof Button>) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel();\n\n  return (\n    <Button\n      data-slot=\"carousel-previous\"\n      variant={variant}\n      size={size}\n      className={cn(\n        'absolute size-8 rounded-full',\n        orientation === 'horizontal'\n          ? 'top-1/2 -left-12 -translate-y-1/2'\n          : '-top-12 left-1/2 -translate-x-1/2 rotate-90',\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  );\n};\n\nconst CarouselNext = ({\n  className,\n  variant = 'outline',\n  size = 'icon',\n  ...props\n}: React.ComponentProps<typeof Button>) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel();\n\n  return (\n    <Button\n      data-slot=\"carousel-next\"\n      variant={variant}\n      size={size}\n      className={cn(\n        'absolute size-8 rounded-full',\n        orientation === 'horizontal'\n          ? 'top-1/2 -right-12 -translate-y-1/2'\n          : '-bottom-12 left-1/2 -translate-x-1/2 rotate-90',\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  );\n};\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2996, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/components/ExercisesList/NewExercisesCarousel.tsx"],"sourcesContent":["import { useIsMobile } from '../../../../hooks/use-mobile';\nimport { Exercise } from '../../types';\nimport { ExerciseCard } from '../shared/ExerciseCard';\n\nimport { Button } from '@/components/ui/button';\nimport {\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n} from '@/components/ui/carousel';\n\ninterface NewExercisesCarouselProps {\n  newExercises: Exercise[];\n  onExerciseClick: (exercise: Exercise) => void;\n}\n\nexport const NewExercisesCarousel = ({\n  newExercises,\n  onExerciseClick,\n}: NewExercisesCarouselProps) => {\n  const isMobile = useIsMobile();\n\n  if (newExercises.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"mb-12\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-xl font-bold text-gray-800\">New Exercises</h2>\n        <Button variant=\"ghost\" className=\"text-indigo-600\">\n          View All\n        </Button>\n      </div>\n\n      {/* Mobile: Touch carousel without arrows, Desktop: Grid with max 5 items */}\n      {isMobile ? (\n        <Carousel className=\"w-full\" opts={{ dragFree: true }}>\n          <CarouselContent className=\"-ml-2\">\n            {newExercises.map(exercise => (\n              <CarouselItem key={exercise.id} className=\"pl-2 basis-64\">\n                <ExerciseCard\n                  exercise={exercise}\n                  size=\"sm\"\n                  onClick={() => onExerciseClick(exercise)}\n                />\n              </CarouselItem>\n            ))}\n          </CarouselContent>\n          {/* No arrows on mobile - touch only */}\n        </Carousel>\n      ) : (\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4 max-w-none\">\n          {newExercises.slice(0, 5).map(exercise => (\n            <div key={exercise.id} className=\"w-full max-w-64\">\n              <ExerciseCard\n                exercise={exercise}\n                size=\"sm\"\n                onClick={() => onExerciseClick(exercise)}\n              />\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AAEA;AAEA;AACA;;;;;;;AAWO,MAAM,uBAAuB;QAAC,EACnC,YAAY,EACZ,eAAe,EACW;;IAC1B,MAAM,WAAW,CAAA,GAAA,gIAAA,CAAA,cAAW,AAAD;IAE3B,IAAI,aAAa,MAAM,KAAK,GAAG;QAC7B,OAAO;IACT;IAEA,qBACE,qYAAC;QAAI,WAAU;;0BACb,qYAAC;gBAAI,WAAU;;kCACb,qYAAC;wBAAG,WAAU;kCAAkC;;;;;;kCAChD,qYAAC,qIAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAQ,WAAU;kCAAkB;;;;;;;;;;;;YAMrD,yBACC,qYAAC,uIAAA,CAAA,WAAQ;gBAAC,WAAU;gBAAS,MAAM;oBAAE,UAAU;gBAAK;0BAClD,cAAA,qYAAC,uIAAA,CAAA,kBAAe;oBAAC,WAAU;8BACxB,aAAa,GAAG,CAAC,CAAA,yBAChB,qYAAC,uIAAA,CAAA,eAAY;4BAAmB,WAAU;sCACxC,cAAA,qYAAC,wKAAA,CAAA,eAAY;gCACX,UAAU;gCACV,MAAK;gCACL,SAAS,IAAM,gBAAgB;;;;;;2BAJhB,SAAS,EAAE;;;;;;;;;;;;;;yEAYpC,qYAAC;gBAAI,WAAU;0BACZ,aAAa,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAA,yBAC5B,qYAAC;wBAAsB,WAAU;kCAC/B,cAAA,qYAAC,wKAAA,CAAA,eAAY;4BACX,UAAU;4BACV,MAAK;4BACL,SAAS,IAAM,gBAAgB;;;;;;uBAJzB,SAAS,EAAE;;;;;;;;;;;;;;;;AAYjC;GAlDa;;QAIM,gIAAA,CAAA,cAAW;;;KAJjB","debugId":null}},
    {"offset": {"line": 3125, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/components/ui/input.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Input = ({\n  className,\n  type,\n  ...props\n}: React.ComponentProps<'input'>) => {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        'file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border px-3 py-1 text-base bg-input-background transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n        'focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]',\n        'aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive',\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\nexport { Input };\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,MAAM,QAAQ;QAAC,EACb,SAAS,EACT,IAAI,EACJ,GAAG,OAC2B;IAC9B,qBACE,qYAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8bACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAlBM","debugId":null}},
    {"offset": {"line": 3158, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/components/ExercisesList/SearchAndFilters.tsx"],"sourcesContent":["import { Search, Filter } from 'lucide-react';\n\nimport { useExerciseFilters } from '../../hooks/useExerciseFilters';\nimport { useExerciseSearch } from '../../hooks/useExerciseSearch';\n\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\n\ninterface SearchAndFiltersProps {\n  onFilterOpen: () => void;\n}\n\nexport const SearchAndFilters = ({ onFilterOpen }: SearchAndFiltersProps) => {\n  const { searchTerm, handleSearchChange } = useExerciseSearch();\n  const { getActiveFilterCount } = useExerciseFilters();\n\n  return (\n    <div className=\"flex gap-4 mb-6\">\n      <div className=\"relative flex-1 max-w-md\">\n        <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n        <Input\n          placeholder=\"Search exercises...\"\n          value={searchTerm}\n          onChange={e => handleSearchChange(e.target.value)}\n          className=\"pl-10\"\n        />\n      </div>\n\n      <Button variant=\"outline\" className=\"relative\" onClick={onFilterOpen}>\n        <Filter className=\"w-4 h-4 mr-2\" />\n        Filters\n        {getActiveFilterCount() > 0 && (\n          <span className=\"absolute -top-1 -right-1 bg-primary text-primary-foreground text-xs rounded-full w-5 h-5 flex items-center justify-center\">\n            {getActiveFilterCount()}\n          </span>\n        )}\n      </Button>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAEA;AACA;AAEA;AACA;;;;;;;;AAMO,MAAM,mBAAmB;QAAC,EAAE,YAAY,EAAyB;;IACtE,MAAM,EAAE,UAAU,EAAE,kBAAkB,EAAE,GAAG,CAAA,GAAA,6JAAA,CAAA,oBAAiB,AAAD;IAC3D,MAAM,EAAE,oBAAoB,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,qBAAkB,AAAD;IAElD,qBACE,qYAAC;QAAI,WAAU;;0BACb,qYAAC;gBAAI,WAAU;;kCACb,qYAAC,6RAAA,CAAA,SAAM;wBAAC,WAAU;;;;;;kCAClB,qYAAC,oIAAA,CAAA,QAAK;wBACJ,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAA,IAAK,mBAAmB,EAAE,MAAM,CAAC,KAAK;wBAChD,WAAU;;;;;;;;;;;;0BAId,qYAAC,qIAAA,CAAA,SAAM;gBAAC,SAAQ;gBAAU,WAAU;gBAAW,SAAS;;kCACtD,qYAAC,6RAAA,CAAA,SAAM;wBAAC,WAAU;;;;;;oBAAiB;oBAElC,yBAAyB,mBACxB,qYAAC;wBAAK,WAAU;kCACb;;;;;;;;;;;;;;;;;;AAMb;GA3Ba;;QACgC,6JAAA,CAAA,oBAAiB;QAC3B,8JAAA,CAAA,qBAAkB;;;KAFxC","debugId":null}},
    {"offset": {"line": 3261, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/exercises/ExercisesList.tsx"],"sourcesContent":["'use client';\n\nimport { Plus } from 'lucide-react';\nimport { useRouter } from 'next/navigation';\nimport { useState } from 'react';\n\nimport { CategoryTabs } from './components/ExercisesList/CategoryTabs';\nimport { ExerciseGrid } from './components/ExercisesList/ExerciseGrid';\nimport { FilterDialog } from './components/ExercisesList/FilterDialog';\nimport { NewExercisesCarousel } from './components/ExercisesList/NewExercisesCarousel';\nimport { SearchAndFilters } from './components/ExercisesList/SearchAndFilters';\nimport { ExerciseProvider } from './context/ExerciseContext';\nimport { useExercises } from './hooks/useExercises';\nimport { Exercise } from './types';\n\nimport { Button } from '@/components/ui/button';\n\nconst ExercisesListContent = () => {\n  const router = useRouter();\n  const [activeCategory, setActiveCategory] = useState('All Exercises');\n  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\n\n  const { exercises, isLoading, error } = useExercises();\n  const newExercises = exercises.filter(exercise => exercise.isNew);\n\n  const handleExerciseClick = (exercise: Exercise) => {\n    router.push(`/exercises/${exercise.id}`);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"w-full px-4 sm:px-6 lg:px-8 py-6\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-8 bg-gray-200 rounded mb-6\"></div>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n            {Array.from({ length: 8 }).map((_, i) => (\n              <div key={i} className=\"h-64 bg-gray-200 rounded\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"w-full px-4 sm:px-6 lg:px-8 py-6\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold text-gray-800 mb-4\">\n            Failed to Load Exercises\n          </h1>\n          <p className=\"text-gray-600 mb-6\">\n            There was an error loading the exercises. Please try again.\n          </p>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700\"\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full px-4 sm:px-6 lg:px-8 py-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-8\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-800\">Exercises</h1>\n          <p className=\"text-gray-500 mt-2\">\n            Discover and explore exercises for your fitness journey.\n          </p>\n        </div>\n\n        <Button\n          onClick={() => router.push('/suggest-exercise')}\n          className=\"flex items-center gap-2 bg-primary text-primary-foreground hover:bg-primary/90\"\n        >\n          <Plus className=\"w-4 h-4\" />\n          Suggest Exercise\n        </Button>\n      </div>\n\n      {/* Search and Filters */}\n      <SearchAndFilters onFilterOpen={() => setIsFilterOpen(true)} />\n\n      {/* Category Tabs */}\n      <CategoryTabs\n        activeCategory={activeCategory}\n        onCategoryChange={setActiveCategory}\n      />\n\n      {/* New Exercises Section */}\n      <NewExercisesCarousel\n        newExercises={newExercises}\n        onExerciseClick={handleExerciseClick}\n      />\n\n      {/* Main Exercises Section */}\n      <ExerciseGrid\n        exercises={exercises}\n        activeCategory={activeCategory}\n        viewMode={viewMode}\n        onViewModeChange={setViewMode}\n        onExerciseClick={handleExerciseClick}\n      />\n\n      {/* Filter Dialog */}\n      <FilterDialog\n        isOpen={isFilterOpen}\n        onClose={() => setIsFilterOpen(false)}\n      />\n    </div>\n  );\n};\n\nconst ExercisesList = () => {\n  return (\n    <ExerciseProvider>\n      <ExercisesListContent />\n    </ExerciseProvider>\n  );\n};\n\nexport default ExercisesList;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AAfA;;;;;;;;;;;;AAiBA,MAAM,uBAAuB;;IAC3B,MAAM,SAAS,CAAA,GAAA,6UAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qWAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qWAAA,CAAA,WAAQ,AAAD,EAAmB;IAC1D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qWAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,wJAAA,CAAA,eAAY,AAAD;IACnD,MAAM,eAAe,UAAU,MAAM,CAAC,CAAA,WAAY,SAAS,KAAK;IAEhE,MAAM,sBAAsB,CAAC;QAC3B,OAAO,IAAI,CAAC,AAAC,cAAyB,OAAZ,SAAS,EAAE;IACvC;IAEA,IAAI,WAAW;QACb,qBACE,qYAAC;YAAI,WAAU;sBACb,cAAA,qYAAC;gBAAI,WAAU;;kCACb,qYAAC;wBAAI,WAAU;;;;;;kCACf,qYAAC;wBAAI,WAAU;kCACZ,MAAM,IAAI,CAAC;4BAAE,QAAQ;wBAAE,GAAG,GAAG,CAAC,CAAC,GAAG,kBACjC,qYAAC;gCAAY,WAAU;+BAAb;;;;;;;;;;;;;;;;;;;;;IAMtB;IAEA,IAAI,OAAO;QACT,qBACE,qYAAC;YAAI,WAAU;sBACb,cAAA,qYAAC;gBAAI,WAAU;;kCACb,qYAAC;wBAAG,WAAU;kCAAwC;;;;;;kCAGtD,qYAAC;wBAAE,WAAU;kCAAqB;;;;;;kCAGlC,qYAAC;wBACC,SAAS,IAAM,OAAO,QAAQ,CAAC,MAAM;wBACrC,WAAU;kCACX;;;;;;;;;;;;;;;;;IAMT;IAEA,qBACE,qYAAC;QAAI,WAAU;;0BAEb,qYAAC;gBAAI,WAAU;;kCACb,qYAAC;;0CACC,qYAAC;gCAAG,WAAU;0CAAmC;;;;;;0CACjD,qYAAC;gCAAE,WAAU;0CAAqB;;;;;;;;;;;;kCAKpC,qYAAC,qIAAA,CAAA,SAAM;wBACL,SAAS,IAAM,OAAO,IAAI,CAAC;wBAC3B,WAAU;;0CAEV,qYAAC,yRAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;4BAAY;;;;;;;;;;;;;0BAMhC,qYAAC,mLAAA,CAAA,mBAAgB;gBAAC,cAAc,IAAM,gBAAgB;;;;;;0BAGtD,qYAAC,+KAAA,CAAA,eAAY;gBACX,gBAAgB;gBAChB,kBAAkB;;;;;;0BAIpB,qYAAC,uLAAA,CAAA,uBAAoB;gBACnB,cAAc;gBACd,iBAAiB;;;;;;0BAInB,qYAAC,+KAAA,CAAA,eAAY;gBACX,WAAW;gBACX,gBAAgB;gBAChB,UAAU;gBACV,kBAAkB;gBAClB,iBAAiB;;;;;;0BAInB,qYAAC,+KAAA,CAAA,eAAY;gBACX,QAAQ;gBACR,SAAS,IAAM,gBAAgB;;;;;;;;;;;;AAIvC;GApGM;;QACW,6UAAA,CAAA,YAAS;QAKgB,wJAAA,CAAA,eAAY;;;KANhD;AAsGN,MAAM,gBAAgB;IACpB,qBACE,qYAAC,8JAAA,CAAA,mBAAgB;kBACf,cAAA,qYAAC;;;;;;;;;;AAGP;MANM;uCAQS","debugId":null}},
    {"offset": {"line": 3522, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/app/%28app%29/exercises/page.tsx"],"sourcesContent":["'use client';\n\nimport ExercisesList from '@/features/exercises/ExercisesList';\n\nconst ExercisesPage = () => {\n  return <ExercisesList />;\n};\n\nexport default ExercisesPage;\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIA,MAAM,gBAAgB;IACpB,qBAAO,qYAAC,iJAAA,CAAA,UAAa;;;;;AACvB;KAFM;uCAIS","debugId":null}}]
}