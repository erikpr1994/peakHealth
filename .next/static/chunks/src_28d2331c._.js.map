{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/components/ui/card.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Card = ({ className, ...props }: React.ComponentProps<'div'>) => {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        'bg-card text-card-foreground flex flex-col gap-6 rounded-xl border',\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\nconst CardHeader = ({ className, ...props }: React.ComponentProps<'div'>) => {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        '@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 pt-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6',\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\nconst CardTitle = ({ className, ...props }: React.ComponentProps<'div'>) => {\n  return (\n    <h4\n      data-slot=\"card-title\"\n      className={cn('leading-none', className)}\n      {...props}\n    />\n  );\n};\n\nconst CardDescription = ({\n  className,\n  ...props\n}: React.ComponentProps<'div'>) => {\n  return (\n    <p\n      data-slot=\"card-description\"\n      className={cn('text-muted-foreground', className)}\n      {...props}\n    />\n  );\n};\n\nconst CardAction = ({ className, ...props }: React.ComponentProps<'div'>) => {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        'col-start-2 row-span-2 row-start-1 self-start justify-self-end',\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\nconst CardContent = ({ className, ...props }: React.ComponentProps<'div'>) => {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn('px-6 [&:last-child]:pb-6', className)}\n      {...props}\n    />\n  );\n};\n\nconst CardFooter = ({ className, ...props }: React.ComponentProps<'div'>) => {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn('flex items-center px-6 pb-6 [.border-t]:pt-6', className)}\n      {...props}\n    />\n  );\n};\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n};\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,MAAM,OAAO;QAAC,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sEACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXM;AAaN,MAAM,aAAa;QAAC,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mKACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXM;AAaN,MAAM,YAAY;QAAC,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gBAAgB;QAC7B,GAAG,KAAK;;;;;;AAGf;MARM;AAUN,MAAM,kBAAkB;QAAC,EACvB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGf;MAXM;AAaN,MAAM,aAAa;QAAC,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXM;AAaN,MAAM,cAAc;QAAC,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;;;;;AAGf;MARM;AAUN,MAAM,aAAa;QAAC,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,qYAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;MARM","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/components/ui/progress.tsx"],"sourcesContent":["'use client';\n\nimport * as ProgressPrimitive from '@radix-ui/react-progress';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Progress = ({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) => {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        'bg-primary/20 relative h-2 w-full overflow-hidden rounded-full',\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  );\n};\n\nexport { Progress };\n"],"names":[],"mappings":";;;;AAEA;AAGA;AALA;;;;AAOA,MAAM,WAAW;QAAC,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,qYAAC,wXAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,qYAAC,wXAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,AAAC,eAAiC,OAAnB,MAAM,CAAC,SAAS,CAAC,GAAE;YAAI;;;;;;;;;;;AAIlE;KArBM","debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/features/routines/RoutineDetail.tsx"],"sourcesContent":["'use client';\n\nimport {\n  ArrowLeft,\n  Play,\n  Edit,\n  Share,\n  Heart,\n  Calendar,\n  Activity,\n  Clock,\n  Target,\n  Copy,\n  Trash,\n} from 'lucide-react';\nimport { useRouter } from 'next/navigation';\nimport { useState } from 'react';\n\nimport { Button } from '@/components/ui/button';\nimport { Card } from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\n\ninterface RoutineDetailProps {\n  routineId: string;\n}\n\ninterface Exercise {\n  id: string;\n  name: string;\n  sets: Array<{\n    reps?: string;\n    weight?: string;\n    duration?: string;\n    restTime: string;\n  }>;\n  notes?: string;\n  muscleGroups: string[];\n}\n\ninterface WorkoutDay {\n  id: string;\n  name: string;\n  exercises: Exercise[];\n  estimatedTime: string;\n  difficulty: 'Beginner' | 'Intermediate' | 'Advanced';\n}\n\ninterface RoutineData {\n  id: string;\n  name: string;\n  description: string;\n  duration: number; // weeks\n  daysPerWeek: number;\n  difficulty: 'Beginner' | 'Intermediate' | 'Advanced';\n  goal: 'Strength' | 'Hypertrophy' | 'Endurance' | 'Weight Loss';\n  isActive: boolean;\n  isFavorite: boolean;\n  progress: {\n    currentWeek: number;\n    totalWeeks: number;\n    completedWorkouts: number;\n    totalWorkouts: number;\n  };\n  schedule: boolean[]; // [Mon, Tue, Wed, Thu, Fri, Sat, Sun]\n  workoutDays: WorkoutDay[];\n  createdDate: string;\n  lastModified: string;\n}\n\nexport default function RoutineDetail({ routineId }: RoutineDetailProps) {\n  const router = useRouter();\n  const [showAllExercises, setShowAllExercises] = useState(false);\n\n  // Mock data - in a real app, this would come from an API based on routineId\n  const routineData: RoutineData = {\n    id: routineId,\n    name: 'Full Body Split',\n    description:\n      'A comprehensive full-body workout targeting all major muscle groups with compound movements. Perfect for intermediate lifters looking to build strength and muscle mass.',\n    duration: 8,\n    daysPerWeek: 3,\n    difficulty: 'Intermediate',\n    goal: 'Hypertrophy',\n    isActive: true,\n    isFavorite: false,\n    progress: {\n      currentWeek: 4,\n      totalWeeks: 8,\n      completedWorkouts: 9,\n      totalWorkouts: 24,\n    },\n    schedule: [true, false, true, false, true, false, false], // M W F\n    workoutDays: [\n      {\n        id: 'workout-a',\n        name: 'Workout A - Upper Focus',\n        estimatedTime: '45-60 min',\n        difficulty: 'Intermediate',\n        exercises: [\n          {\n            id: 'bench-press',\n            name: 'Barbell Bench Press',\n            muscleGroups: ['Chest', 'Triceps', 'Shoulders'],\n            sets: [\n              { reps: '10', weight: 'Warm-up', restTime: '60s' },\n              { reps: '8', weight: '135 lbs', restTime: '90s' },\n              { reps: '6', weight: '155 lbs', restTime: '90s' },\n              { reps: '6', weight: '155 lbs', restTime: '90s' },\n            ],\n          },\n          {\n            id: 'bent-over-row',\n            name: 'Bent-Over Barbell Row',\n            muscleGroups: ['Back', 'Biceps'],\n            sets: [\n              { reps: '8', weight: '115 lbs', restTime: '90s' },\n              { reps: '8', weight: '125 lbs', restTime: '90s' },\n              { reps: '6', weight: '135 lbs', restTime: '90s' },\n            ],\n          },\n          {\n            id: 'shoulder-press',\n            name: 'Overhead Press',\n            muscleGroups: ['Shoulders', 'Triceps'],\n            sets: [\n              { reps: '8', weight: '85 lbs', restTime: '90s' },\n              { reps: '6', weight: '95 lbs', restTime: '90s' },\n              { reps: '6', weight: '95 lbs', restTime: '90s' },\n            ],\n          },\n          {\n            id: 'pull-ups',\n            name: 'Pull-ups',\n            muscleGroups: ['Back', 'Biceps'],\n            sets: [\n              { reps: '8', weight: 'Bodyweight', restTime: '90s' },\n              { reps: '6', weight: 'Bodyweight', restTime: '90s' },\n              { reps: '5', weight: 'Bodyweight', restTime: '90s' },\n            ],\n          },\n        ],\n      },\n      {\n        id: 'workout-b',\n        name: 'Workout B - Lower Focus',\n        estimatedTime: '50-65 min',\n        difficulty: 'Intermediate',\n        exercises: [\n          {\n            id: 'squats',\n            name: 'Barbell Back Squat',\n            muscleGroups: ['Quadriceps', 'Glutes', 'Core'],\n            sets: [\n              { reps: '10', weight: 'Warm-up', restTime: '60s' },\n              { reps: '8', weight: '155 lbs', restTime: '2 min' },\n              { reps: '6', weight: '185 lbs', restTime: '2 min' },\n              { reps: '6', weight: '185 lbs', restTime: '2 min' },\n            ],\n          },\n          {\n            id: 'deadlift',\n            name: 'Romanian Deadlift',\n            muscleGroups: ['Hamstrings', 'Glutes', 'Back'],\n            sets: [\n              { reps: '8', weight: '135 lbs', restTime: '90s' },\n              { reps: '6', weight: '155 lbs', restTime: '90s' },\n              { reps: '6', weight: '165 lbs', restTime: '90s' },\n            ],\n          },\n        ],\n      },\n    ],\n    createdDate: 'June 15, 2024',\n    lastModified: 'July 10, 2024',\n  };\n\n  const getDifficultyColor = (difficulty: string) => {\n    const colors = {\n      Beginner: 'bg-green-100 text-green-700',\n      Intermediate: 'bg-yellow-100 text-yellow-700',\n      Advanced: 'bg-red-100 text-red-700',\n    };\n    return colors[difficulty as keyof typeof colors] || colors.Intermediate;\n  };\n\n  const getGoalColor = (goal: string) => {\n    const colors = {\n      Strength: 'bg-blue-100 text-blue-700',\n      Hypertrophy: 'bg-purple-100 text-purple-700',\n      Endurance: 'bg-green-100 text-green-700',\n      'Weight Loss': 'bg-orange-100 text-orange-700',\n    };\n    return colors[goal as keyof typeof colors] || colors.Strength;\n  };\n\n  const dayLabels = ['M', 'T', 'W', 'T', 'F', 'S', 'S'];\n\n  const progressPercentage =\n    (routineData.progress.completedWorkouts /\n      routineData.progress.totalWorkouts) *\n    100;\n\n  const displayedExercises = showAllExercises\n    ? routineData.workoutDays.flatMap(day => day.exercises)\n    : routineData.workoutDays.flatMap(day => day.exercises).slice(0, 6);\n\n  return (\n    <div className=\"w-full px-4 sm:px-6 lg:px-8 py-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-8\">\n        <div className=\"flex items-center gap-4\">\n          <Button variant=\"ghost\" onClick={() => router.push('/routines')}>\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n            Back to Routines\n          </Button>\n          <div>\n            <div className=\"flex items-center gap-3 mb-2\">\n              <h1 className=\"text-3xl font-bold text-gray-800\">\n                {routineData.name}\n              </h1>\n              {routineData.isActive && (\n                <span className=\"px-3 py-1 bg-indigo-100 text-indigo-700 rounded-full text-sm font-medium\">\n                  Active\n                </span>\n              )}\n            </div>\n            <p className=\"text-gray-500\">{routineData.description}</p>\n          </div>\n        </div>\n\n        <div className=\"flex items-center gap-3\">\n          <Button variant=\"ghost\" size=\"sm\">\n            <Heart\n              className={`w-4 h-4 ${\n                routineData.isFavorite\n                  ? 'text-red-500 fill-red-500'\n                  : 'text-gray-400'\n              }`}\n            />\n          </Button>\n          <Button variant=\"ghost\" size=\"sm\">\n            <Share className=\"w-4 h-4\" />\n          </Button>\n          <Button\n            variant=\"outline\"\n            onClick={() => router.push(`/routines/${routineId}/edit`)}\n          >\n            <Edit className=\"w-4 h-4 mr-2\" />\n            Edit\n          </Button>\n          <Button\n            className=\"bg-indigo-600 hover:bg-indigo-700\"\n            onClick={() => router.push(`/workout-tracker/${routineId}`)}\n          >\n            <Play className=\"w-4 h-4 mr-2\" />\n            Start Workout\n          </Button>\n        </div>\n      </div>\n\n      {/* Overview Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n        <Card className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <h3 className=\"text-sm font-medium text-gray-500\">Duration</h3>\n            <Calendar className=\"w-4 h-4 text-gray-400\" />\n          </div>\n          <div className=\"text-2xl font-bold text-gray-800\">\n            {routineData.duration} weeks\n          </div>\n        </Card>\n\n        <Card className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <h3 className=\"text-sm font-medium text-gray-500\">Frequency</h3>\n            <Activity className=\"w-4 h-4 text-gray-400\" />\n          </div>\n          <div className=\"text-2xl font-bold text-gray-800\">\n            {routineData.daysPerWeek} days/week\n          </div>\n        </Card>\n\n        <Card className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <h3 className=\"text-sm font-medium text-gray-500\">Avg. Duration</h3>\n            <Clock className=\"w-4 h-4 text-gray-400\" />\n          </div>\n          <div className=\"text-2xl font-bold text-gray-800\">45-60 min</div>\n        </Card>\n\n        <Card className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <h3 className=\"text-sm font-medium text-gray-500\">Goal</h3>\n            <Target className=\"w-4 h-4 text-gray-400\" />\n          </div>\n          <span\n            className={`px-3 py-1 rounded-full text-sm font-medium ${getGoalColor(\n              routineData.goal\n            )}`}\n          >\n            {routineData.goal}\n          </span>\n        </Card>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 mb-8\">\n        {/* Progress & Schedule */}\n        <div className=\"lg:col-span-2 space-y-6\">\n          {/* Progress */}\n          <Card className=\"p-6\">\n            <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">\n              Progress\n            </h2>\n            <div className=\"space-y-4\">\n              <div>\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"text-sm text-gray-600\">\n                    Overall Progress\n                  </span>\n                  <span className=\"text-sm font-medium text-gray-800\">\n                    Week {routineData.progress.currentWeek} of{' '}\n                    {routineData.progress.totalWeeks}\n                  </span>\n                </div>\n                <Progress\n                  value={\n                    (routineData.progress.currentWeek /\n                      routineData.progress.totalWeeks) *\n                    100\n                  }\n                  className=\"h-2\"\n                />\n              </div>\n\n              <div>\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"text-sm text-gray-600\">\n                    Workouts Completed\n                  </span>\n                  <span className=\"text-sm font-medium text-gray-800\">\n                    {routineData.progress.completedWorkouts} of{' '}\n                    {routineData.progress.totalWorkouts}\n                  </span>\n                </div>\n                <Progress value={progressPercentage} className=\"h-2\" />\n              </div>\n            </div>\n          </Card>\n\n          {/* Weekly Schedule */}\n          <Card className=\"p-6\">\n            <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">\n              Weekly Schedule\n            </h2>\n            <div className=\"flex gap-3\">\n              {routineData.schedule.map((isActive, index) => (\n                <div\n                  key={index}\n                  className={`flex-1 h-16 rounded-lg flex flex-col items-center justify-center ${\n                    isActive\n                      ? 'bg-indigo-100 text-indigo-700 border-2 border-indigo-300'\n                      : 'bg-gray-100 text-gray-500'\n                  }`}\n                >\n                  <div className=\"text-xs font-medium\">{dayLabels[index]}</div>\n                  {isActive && <div className=\"text-xs mt-1\">Workout</div>}\n                </div>\n              ))}\n            </div>\n          </Card>\n        </div>\n\n        {/* Routine Info */}\n        <Card className=\"p-6\">\n          <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">\n            Routine Info\n          </h2>\n          <div className=\"space-y-4\">\n            <div>\n              <div className=\"text-sm text-gray-500 mb-1\">Difficulty Level</div>\n              <span\n                className={`px-3 py-1 rounded-full text-sm font-medium ${getDifficultyColor(\n                  routineData.difficulty\n                )}`}\n              >\n                {routineData.difficulty}\n              </span>\n            </div>\n\n            <div>\n              <div className=\"text-sm text-gray-500 mb-1\">Created</div>\n              <div className=\"font-medium text-gray-800\">\n                {routineData.createdDate}\n              </div>\n            </div>\n\n            <div>\n              <div className=\"text-sm text-gray-500 mb-1\">Last Modified</div>\n              <div className=\"font-medium text-gray-800\">\n                {routineData.lastModified}\n              </div>\n            </div>\n\n            <div className=\"pt-4 border-t border-gray-200\">\n              <div className=\"text-sm text-gray-500 mb-3\">Quick Actions</div>\n              <div className=\"space-y-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  className=\"w-full justify-start\"\n                >\n                  <Copy className=\"w-4 h-4 mr-2\" />\n                  Duplicate Routine\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  className=\"w-full justify-start\"\n                >\n                  <Share className=\"w-4 h-4 mr-2\" />\n                  Share Routine\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  className=\"w-full justify-start text-red-600 hover:text-red-700\"\n                >\n                  <Trash className=\"w-4 h-4 mr-2\" />\n                  Delete Routine\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Card>\n      </div>\n\n      {/* Workout Days */}\n      <Card className=\"p-6 mb-8\">\n        <h2 className=\"text-lg font-semibold text-gray-800 mb-6\">\n          Workout Days\n        </h2>\n        <div className=\"space-y-6\">\n          {routineData.workoutDays.map(workout => (\n            <div\n              key={workout.id}\n              className=\"border border-gray-200 rounded-lg p-6\"\n            >\n              <div className=\"flex items-center justify-between mb-4\">\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-800\">\n                    {workout.name}\n                  </h3>\n                  <div className=\"flex items-center gap-4 text-sm text-gray-600 mt-1\">\n                    <span>Est. {workout.estimatedTime}</span>\n                    <span\n                      className={`px-2 py-1 rounded text-xs ${getDifficultyColor(\n                        workout.difficulty\n                      )}`}\n                    >\n                      {workout.difficulty}\n                    </span>\n                    <span>{workout.exercises.length} exercises</span>\n                  </div>\n                </div>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => router.push(`/workout-tracker/${routineId}`)}\n                >\n                  <Play className=\"w-4 h-4 mr-2\" />\n                  Start\n                </Button>\n              </div>\n\n              <div className=\"space-y-3\">\n                {workout.exercises.map(exercise => (\n                  <div key={exercise.id} className=\"bg-gray-50 p-4 rounded-lg\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <h4 className=\"font-medium text-gray-800\">\n                        {exercise.name}\n                      </h4>\n                      <div className=\"flex flex-wrap gap-1\">\n                        {exercise.muscleGroups.map(group => (\n                          <span\n                            key={group}\n                            className=\"px-2 py-1 bg-white text-gray-600 rounded text-xs\"\n                          >\n                            {group}\n                          </span>\n                        ))}\n                      </div>\n                    </div>\n                    <div className=\"text-sm text-gray-600\">\n                      {exercise.sets.length} sets •{' '}\n                      {exercise.sets.map(set => set.reps).join(', ')} reps\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      </Card>\n\n      {/* Exercise List */}\n      <Card className=\"p-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h2 className=\"text-lg font-semibold text-gray-800\">All Exercises</h2>\n          <Button\n            variant=\"ghost\"\n            onClick={() => setShowAllExercises(!showAllExercises)}\n            className=\"text-indigo-600\"\n          >\n            {showAllExercises ? 'Show Less' : 'View All'}\n          </Button>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {displayedExercises.map(exercise => (\n            <div\n              key={exercise.id}\n              className=\"border border-gray-200 rounded-lg p-4\"\n            >\n              <h4 className=\"font-medium text-gray-800 mb-2\">\n                {exercise.name}\n              </h4>\n              <div className=\"flex flex-wrap gap-1 mb-2\">\n                {exercise.muscleGroups.map(group => (\n                  <span\n                    key={group}\n                    className=\"px-2 py-1 bg-gray-100 text-gray-600 rounded text-xs\"\n                  >\n                    {group}\n                  </span>\n                ))}\n              </div>\n              <div className=\"text-sm text-gray-600\">\n                {exercise.sets.length} sets\n              </div>\n            </div>\n          ))}\n        </div>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1434, "column": 0}, "map": {"version":3,"sources":["file:///Users/erikpr94/Documents/peakHealth/src/app/%28app%29/routines/%5BroutineId%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport { useParams } from 'next/navigation';\n\nimport RoutineDetail from '@/features/routines/RoutineDetail';\n\nconst RoutineDetailPage = () => {\n  const { routineId } = useParams();\n  return <RoutineDetail routineId={routineId as string} />;\n};\n\nexport default RoutineDetailPage;\n"],"names":[],"mappings":";;;;AAEA;AAEA;;;AAJA;;;AAMA,MAAM,oBAAoB;;IACxB,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,6UAAA,CAAA,YAAS,AAAD;IAC9B,qBAAO,qYAAC,gJAAA,CAAA,UAAa;QAAC,WAAW;;;;;;AACnC;GAHM;;QACkB,6UAAA,CAAA,YAAS;;;KAD3B;uCAKS","debugId":null}}]
}